
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftDOTleftATrightTILDEleftISVOIDleftADDSUBTRACTleftMULTIPLYDIVIDEleftLELTEQUALleftNOTrightLARROWADD AT CASE CLASS COLON COMMA DIVIDE DOT ELSE EQUAL ESAC FALSE FI IDENTIFIER IF IN INHERITS INTEGER ISVOID LARROW LBRACE LE LET LOOP LPAREN LT MULTIPLY NEW NOT OF POOL RARROW RBRACE RPAREN SEMI STRING SUBTRACT THEN TILDE TRUE TYPE WHILEprogram : classlistclasslist : class SEMIclasslist : class SEMI classlistclass : CLASS type LBRACE featurelist RBRACEclass : CLASS type INHERITS type LBRACE featurelist RBRACEtype : TYPEidentifier : IDENTIFIERformallist : formal COMMA formallistformallist : formalformal : identifier COLON typefeaturelist : featurelist : feature SEMI featurelistfeature : attributeattribute : identifier COLON typeattribute : identifier COLON type LARROW expfeature : identifier LPAREN formallist RPAREN COLON type LBRACE exp RBRACEfeature : identifier LPAREN RPAREN COLON type LBRACE exp RBRACEexplist_semi : exp SEMIexplist_semi : exp SEMI explist_semiexplist_comma : expexplist_comma : exp COMMA explist_commaexp : identifier LARROW expexp : exp DOT identifier LPAREN explist_comma RPARENexp : exp DOT identifier LPAREN RPARENexp : exp AT type DOT identifier LPAREN explist_comma RPARENexp : exp AT type DOT identifier LPAREN RPARENexp : identifier LPAREN explist_comma RPARENexp : identifier LPAREN RPARENexp : IF exp THEN exp ELSE exp FIexp : WHILE exp LOOP exp POOLexp : LBRACE explist_semi RBRACEexp : NEW typeexp : ISVOID expexp : exp ADD expexp : exp SUBTRACT expexp : exp MULTIPLY expexp : exp DIVIDE expexp : exp LT expexp : exp LE expexp : exp EQUAL expexp : NOT expexp : TILDE expexp : identifierexp : INTEGERexp : STRINGexp : TRUEexp : FALSEexp : LET attribute attributelist IN expattributelist : attributelist : COMMA attribute attributelistexp : CASE exp OF elementlist ESACelement : identifier COLON type RARROW expelementlist : element SEMIelementlist : element SEMI elementlist'
    
_lr_action_items = {'CLASS':([0,5,],[4,4,]),'$end':([1,2,5,8,],[0,-1,-2,-3,]),'SEMI':([3,7,12,13,15,17,27,34,39,40,48,49,50,51,70,71,72,73,74,80,82,86,87,88,89,90,91,92,95,101,102,112,114,117,120,121,123,126,132,133,135,136,],[5,-6,18,-13,-7,-4,-14,-5,-43,-15,-44,-45,-46,-47,96,-32,-33,-41,-42,-22,-28,-34,-35,-36,-37,-38,-39,-40,-31,-17,-27,124,-16,-24,-30,-48,-51,-23,-26,-29,-25,-52,]),'TYPE':([4,10,20,29,31,36,44,59,125,],[7,7,7,7,7,7,7,7,7,]),'LBRACE':([6,7,16,33,37,41,42,43,45,46,47,53,54,55,56,57,60,61,62,63,64,65,66,78,93,94,96,103,104,109,119,127,134,],[9,-6,21,43,55,43,43,43,43,43,43,43,78,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'INHERITS':([6,7,],[10,-6,]),'LARROW':([7,15,27,39,],[-6,-7,33,56,]),'COMMA':([7,15,26,27,35,39,40,48,49,50,51,71,72,73,74,75,80,82,83,86,87,88,89,90,91,92,95,102,110,117,120,121,123,126,132,133,135,],[-6,-7,32,-14,-10,-43,-15,-44,-45,-46,-47,-32,-33,-41,-42,98,-22,-28,103,-34,-35,-36,-37,-38,-39,-40,-31,-27,98,-24,-30,-48,-51,-23,-26,-29,-25,]),'IN':([7,15,27,39,40,48,49,50,51,71,72,73,74,75,80,82,86,87,88,89,90,91,92,95,97,102,110,117,120,121,122,123,126,132,133,135,],[-6,-7,-14,-43,-15,-44,-45,-46,-47,-32,-33,-41,-42,-49,-22,-28,-34,-35,-36,-37,-38,-39,-40,-31,109,-27,-49,-24,-30,-48,-50,-51,-23,-26,-29,-25,]),'RPAREN':([7,15,19,24,26,35,38,39,48,49,50,51,57,71,72,73,74,80,81,82,83,86,87,88,89,90,91,92,95,102,104,115,116,117,120,121,123,126,127,131,132,133,135,],[-6,-7,25,30,-9,-10,-8,-43,-44,-45,-46,-47,82,-32,-33,-41,-42,-22,102,-28,-20,-34,-35,-36,-37,-38,-39,-40,-31,-27,117,-21,126,-24,-30,-48,-51,-23,132,135,-26,-29,-25,]),'DOT':([7,15,39,40,48,49,50,51,67,68,70,71,72,73,74,77,79,80,82,83,85,86,87,88,89,90,91,92,95,100,102,106,107,117,120,121,123,126,128,132,133,135,136,],[-6,-7,-43,58,-44,-45,-46,-47,58,58,58,-32,-33,-41,-42,58,58,-22,-28,58,105,-34,-35,-36,-37,-38,-39,-40,-31,58,-27,58,58,-24,-30,58,-51,-23,58,-26,-29,-25,58,]),'AT':([7,15,39,40,48,49,50,51,67,68,70,71,72,73,74,77,79,80,82,83,86,87,88,89,90,91,92,95,100,102,106,107,117,120,121,123,126,128,132,133,135,136,],[-6,-7,-43,59,-44,-45,-46,-47,59,59,59,-32,-33,-41,-42,59,59,-22,-28,59,-34,-35,-36,-37,-38,-39,-40,-31,59,-27,59,59,-24,-30,59,-51,-23,59,-26,-29,-25,59,]),'ADD':([7,15,39,40,48,49,50,51,67,68,70,71,72,73,74,77,79,80,82,83,86,87,88,89,90,91,92,95,100,102,106,107,117,120,121,123,126,128,132,133,135,136,],[-6,-7,-43,60,-44,-45,-46,-47,60,60,60,-32,60,-41,60,60,60,-22,-28,60,-34,-35,-36,-37,-38,-39,-40,-31,60,-27,60,60,-24,-30,60,-51,-23,60,-26,-29,-25,60,]),'SUBTRACT':([7,15,39,40,48,49,50,51,67,68,70,71,72,73,74,77,79,80,82,83,86,87,88,89,90,91,92,95,100,102,106,107,117,120,121,123,126,128,132,133,135,136,],[-6,-7,-43,61,-44,-45,-46,-47,61,61,61,-32,61,-41,61,61,61,-22,-28,61,-34,-35,-36,-37,-38,-39,-40,-31,61,-27,61,61,-24,-30,61,-51,-23,61,-26,-29,-25,61,]),'MULTIPLY':([7,15,39,40,48,49,50,51,67,68,70,71,72,73,74,77,79,80,82,83,86,87,88,89,90,91,92,95,100,102,106,107,117,120,121,123,126,128,132,133,135,136,],[-6,-7,-43,62,-44,-45,-46,-47,62,62,62,-32,62,-41,62,62,62,-22,-28,62,62,62,-36,-37,-38,-39,-40,-31,62,-27,62,62,-24,-30,62,-51,-23,62,-26,-29,-25,62,]),'DIVIDE':([7,15,39,40,48,49,50,51,67,68,70,71,72,73,74,77,79,80,82,83,86,87,88,89,90,91,92,95,100,102,106,107,117,120,121,123,126,128,132,133,135,136,],[-6,-7,-43,63,-44,-45,-46,-47,63,63,63,-32,63,-41,63,63,63,-22,-28,63,63,63,-36,-37,-38,-39,-40,-31,63,-27,63,63,-24,-30,63,-51,-23,63,-26,-29,-25,63,]),'LT':([7,15,39,40,48,49,50,51,67,68,70,71,72,73,74,77,79,80,82,83,86,87,88,89,90,91,92,95,100,102,106,107,117,120,121,123,126,128,132,133,135,136,],[-6,-7,-43,64,-44,-45,-46,-47,64,64,64,-32,64,-41,64,64,64,-22,-28,64,64,64,64,64,-38,-39,-40,-31,64,-27,64,64,-24,-30,64,-51,-23,64,-26,-29,-25,64,]),'LE':([7,15,39,40,48,49,50,51,67,68,70,71,72,73,74,77,79,80,82,83,86,87,88,89,90,91,92,95,100,102,106,107,117,120,121,123,126,128,132,133,135,136,],[-6,-7,-43,65,-44,-45,-46,-47,65,65,65,-32,65,-41,65,65,65,-22,-28,65,65,65,65,65,-38,-39,-40,-31,65,-27,65,65,-24,-30,65,-51,-23,65,-26,-29,-25,65,]),'EQUAL':([7,15,39,40,48,49,50,51,67,68,70,71,72,73,74,77,79,80,82,83,86,87,88,89,90,91,92,95,100,102,106,107,117,120,121,123,126,128,132,133,135,136,],[-6,-7,-43,66,-44,-45,-46,-47,66,66,66,-32,66,-41,66,66,66,-22,-28,66,66,66,66,66,-38,-39,-40,-31,66,-27,66,66,-24,-30,66,-51,-23,66,-26,-29,-25,66,]),'THEN':([7,15,39,48,49,50,51,67,71,72,73,74,80,82,86,87,88,89,90,91,92,95,102,117,120,121,123,126,132,133,135,],[-6,-7,-43,-44,-45,-46,-47,93,-32,-33,-41,-42,-22,-28,-34,-35,-36,-37,-38,-39,-40,-31,-27,-24,-30,-48,-51,-23,-26,-29,-25,]),'LOOP':([7,15,39,48,49,50,51,68,71,72,73,74,80,82,86,87,88,89,90,91,92,95,102,117,120,121,123,126,132,133,135,],[-6,-7,-43,-44,-45,-46,-47,94,-32,-33,-41,-42,-22,-28,-34,-35,-36,-37,-38,-39,-40,-31,-27,-24,-30,-48,-51,-23,-26,-29,-25,]),'OF':([7,15,39,48,49,50,51,71,72,73,74,77,80,82,86,87,88,89,90,91,92,95,102,117,120,121,123,126,132,133,135,],[-6,-7,-43,-44,-45,-46,-47,-32,-33,-41,-42,99,-22,-28,-34,-35,-36,-37,-38,-39,-40,-31,-27,-24,-30,-48,-51,-23,-26,-29,-25,]),'RBRACE':([7,9,11,15,18,21,22,28,39,48,49,50,51,69,71,72,73,74,79,80,82,86,87,88,89,90,91,92,95,96,100,102,108,117,120,121,123,126,132,133,135,],[-6,-11,17,-7,-11,-11,-12,34,-43,-44,-45,-46,-47,95,-32,-33,-41,-42,101,-22,-28,-34,-35,-36,-37,-38,-39,-40,-31,-18,114,-27,-19,-24,-30,-48,-51,-23,-26,-29,-25,]),'ELSE':([7,15,39,48,49,50,51,71,72,73,74,80,82,86,87,88,89,90,91,92,95,102,106,117,120,121,123,126,132,133,135,],[-6,-7,-43,-44,-45,-46,-47,-32,-33,-41,-42,-22,-28,-34,-35,-36,-37,-38,-39,-40,-31,-27,119,-24,-30,-48,-51,-23,-26,-29,-25,]),'POOL':([7,15,39,48,49,50,51,71,72,73,74,80,82,86,87,88,89,90,91,92,95,102,107,117,120,121,123,126,132,133,135,],[-6,-7,-43,-44,-45,-46,-47,-32,-33,-41,-42,-22,-28,-34,-35,-36,-37,-38,-39,-40,-31,-27,120,-24,-30,-48,-51,-23,-26,-29,-25,]),'FI':([7,15,39,48,49,50,51,71,72,73,74,80,82,86,87,88,89,90,91,92,95,102,117,120,121,123,126,128,132,133,135,],[-6,-7,-43,-44,-45,-46,-47,-32,-33,-41,-42,-22,-28,-34,-35,-36,-37,-38,-39,-40,-31,-27,-24,-30,-48,-51,-23,133,-26,-29,-25,]),'RARROW':([7,130,],[-6,134,]),'IDENTIFIER':([9,18,19,21,32,33,41,42,43,45,46,47,52,53,55,56,57,58,60,61,62,63,64,65,66,78,93,94,96,98,99,103,104,105,109,119,124,127,134,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'LPAREN':([14,15,39,84,118,],[19,-7,57,104,127,]),'COLON':([14,15,23,25,30,76,113,],[20,-7,29,31,36,20,125,]),'IF':([33,41,42,43,45,46,47,53,55,56,57,60,61,62,63,64,65,66,78,93,94,96,103,104,109,119,127,134,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'WHILE':([33,41,42,43,45,46,47,53,55,56,57,60,61,62,63,64,65,66,78,93,94,96,103,104,109,119,127,134,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'NEW':([33,41,42,43,45,46,47,53,55,56,57,60,61,62,63,64,65,66,78,93,94,96,103,104,109,119,127,134,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'ISVOID':([33,41,42,43,45,46,47,53,55,56,57,60,61,62,63,64,65,66,78,93,94,96,103,104,109,119,127,134,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'NOT':([33,41,42,43,45,46,47,53,55,56,57,60,61,62,63,64,65,66,78,93,94,96,103,104,109,119,127,134,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'TILDE':([33,41,42,43,45,46,47,53,55,56,57,60,61,62,63,64,65,66,78,93,94,96,103,104,109,119,127,134,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'INTEGER':([33,41,42,43,45,46,47,53,55,56,57,60,61,62,63,64,65,66,78,93,94,96,103,104,109,119,127,134,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'STRING':([33,41,42,43,45,46,47,53,55,56,57,60,61,62,63,64,65,66,78,93,94,96,103,104,109,119,127,134,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'TRUE':([33,41,42,43,45,46,47,53,55,56,57,60,61,62,63,64,65,66,78,93,94,96,103,104,109,119,127,134,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'FALSE':([33,41,42,43,45,46,47,53,55,56,57,60,61,62,63,64,65,66,78,93,94,96,103,104,109,119,127,134,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'LET':([33,41,42,43,45,46,47,53,55,56,57,60,61,62,63,64,65,66,78,93,94,96,103,104,109,119,127,134,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'CASE':([33,41,42,43,45,46,47,53,55,56,57,60,61,62,63,64,65,66,78,93,94,96,103,104,109,119,127,134,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'ESAC':([111,124,129,],[123,-53,-54,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'classlist':([0,5,],[2,8,]),'class':([0,5,],[3,3,]),'type':([4,10,20,29,31,36,44,59,125,],[6,16,27,35,37,54,71,85,130,]),'featurelist':([9,18,21,],[11,22,28,]),'feature':([9,18,21,],[12,12,12,]),'attribute':([9,18,21,52,98,],[13,13,13,75,110,]),'identifier':([9,18,19,21,32,33,41,42,43,45,46,47,52,53,55,56,57,58,60,61,62,63,64,65,66,78,93,94,96,98,99,103,104,105,109,119,124,127,134,],[14,14,23,14,23,39,39,39,39,39,39,39,76,39,39,39,39,84,39,39,39,39,39,39,39,39,39,39,39,76,113,39,39,118,39,39,113,39,39,]),'formallist':([19,32,],[24,38,]),'formal':([19,32,],[26,26,]),'exp':([33,41,42,43,45,46,47,53,55,56,57,60,61,62,63,64,65,66,78,93,94,96,103,104,109,119,127,134,],[40,67,68,70,72,73,74,77,79,80,83,86,87,88,89,90,91,92,100,106,107,70,83,83,121,128,83,136,]),'explist_semi':([43,96,],[69,108,]),'explist_comma':([57,103,104,127,],[81,115,116,131,]),'attributelist':([75,110,],[97,122,]),'elementlist':([99,124,],[111,129,]),'element':([99,124,],[112,112,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> classlist','program',1,'p_program_classlist','main.py',122),
  ('classlist -> class SEMI','classlist',2,'p_classlist_one','main.py',128),
  ('classlist -> class SEMI classlist','classlist',3,'p_classlist_some','main.py',132),
  ('class -> CLASS type LBRACE featurelist RBRACE','class',5,'p_class_noinherit','main.py',136),
  ('class -> CLASS type INHERITS type LBRACE featurelist RBRACE','class',7,'p_class_inherit','main.py',140),
  ('type -> TYPE','type',1,'p_type','main.py',146),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','main.py',152),
  ('formallist -> formal COMMA formallist','formallist',3,'p_formallist_some','main.py',158),
  ('formallist -> formal','formallist',1,'p_formallist_one','main.py',162),
  ('formal -> identifier COLON type','formal',3,'p_formal','main.py',166),
  ('featurelist -> <empty>','featurelist',0,'p_featurelist_none','main.py',172),
  ('featurelist -> feature SEMI featurelist','featurelist',3,'p_featurelist_some','main.py',176),
  ('feature -> attribute','feature',1,'p_feature_attribute','main.py',180),
  ('attribute -> identifier COLON type','attribute',3,'p_attributenoinit','main.py',184),
  ('attribute -> identifier COLON type LARROW exp','attribute',5,'p_attributeinit','main.py',188),
  ('feature -> identifier LPAREN formallist RPAREN COLON type LBRACE exp RBRACE','feature',9,'p_feature_method_withformals','main.py',192),
  ('feature -> identifier LPAREN RPAREN COLON type LBRACE exp RBRACE','feature',8,'p_feature_method_noformals','main.py',196),
  ('explist_semi -> exp SEMI','explist_semi',2,'p_explist_semi_one','main.py',202),
  ('explist_semi -> exp SEMI explist_semi','explist_semi',3,'p_explist_semi_some','main.py',206),
  ('explist_comma -> exp','explist_comma',1,'p_explist_comma_one','main.py',210),
  ('explist_comma -> exp COMMA explist_comma','explist_comma',3,'p_explist_comma_some','main.py',214),
  ('exp -> identifier LARROW exp','exp',3,'p_exp_assign','main.py',218),
  ('exp -> exp DOT identifier LPAREN explist_comma RPAREN','exp',6,'p_exp_dynamicdispatch_withexp','main.py',222),
  ('exp -> exp DOT identifier LPAREN RPAREN','exp',5,'p_exp_dynamicdispatch_noexp','main.py',226),
  ('exp -> exp AT type DOT identifier LPAREN explist_comma RPAREN','exp',8,'p_exp_staticdispatch_withexp','main.py',230),
  ('exp -> exp AT type DOT identifier LPAREN RPAREN','exp',7,'p_exp_staticdispatch_noexp','main.py',234),
  ('exp -> identifier LPAREN explist_comma RPAREN','exp',4,'p_exp_selfdispatch_withexp','main.py',238),
  ('exp -> identifier LPAREN RPAREN','exp',3,'p_exp_selfdispatch_noexp','main.py',242),
  ('exp -> IF exp THEN exp ELSE exp FI','exp',7,'p_exp_if','main.py',246),
  ('exp -> WHILE exp LOOP exp POOL','exp',5,'p_exp_while','main.py',250),
  ('exp -> LBRACE explist_semi RBRACE','exp',3,'p_exp_block','main.py',254),
  ('exp -> NEW type','exp',2,'p_exp_new','main.py',258),
  ('exp -> ISVOID exp','exp',2,'p_exp_isvoid','main.py',262),
  ('exp -> exp ADD exp','exp',3,'p_exp_plus','main.py',266),
  ('exp -> exp SUBTRACT exp','exp',3,'p_exp_minus','main.py',270),
  ('exp -> exp MULTIPLY exp','exp',3,'p_exp_times','main.py',274),
  ('exp -> exp DIVIDE exp','exp',3,'p_exp_divide','main.py',278),
  ('exp -> exp LT exp','exp',3,'p_exp_lt','main.py',282),
  ('exp -> exp LE exp','exp',3,'p_exp_le','main.py',286),
  ('exp -> exp EQUAL exp','exp',3,'p_exp_eq','main.py',290),
  ('exp -> NOT exp','exp',2,'p_exp_not','main.py',294),
  ('exp -> TILDE exp','exp',2,'p_exp_negate','main.py',298),
  ('exp -> identifier','exp',1,'p_exp_identifier','main.py',306),
  ('exp -> INTEGER','exp',1,'p_exp_integer','main.py',310),
  ('exp -> STRING','exp',1,'p_exp_string','main.py',314),
  ('exp -> TRUE','exp',1,'p_exp_true','main.py',318),
  ('exp -> FALSE','exp',1,'p_exp_false','main.py',322),
  ('exp -> LET attribute attributelist IN exp','exp',5,'p_exp_let','main.py',328),
  ('attributelist -> <empty>','attributelist',0,'p_let_attributelist_none','main.py',332),
  ('attributelist -> COMMA attribute attributelist','attributelist',3,'p_let_attrubutelist_some','main.py',336),
  ('exp -> CASE exp OF elementlist ESAC','exp',5,'p_exp_case','main.py',342),
  ('element -> identifier COLON type RARROW exp','element',5,'p_case_element','main.py',346),
  ('elementlist -> element SEMI','elementlist',2,'p_case_elementlist_one','main.py',350),
  ('elementlist -> element SEMI elementlist','elementlist',3,'p_case_elementlist_some','main.py',354),
]

Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> classlist
Rule 2     classlist -> class SEMI
Rule 3     classlist -> class SEMI classlist
Rule 4     class -> CLASS type LBRACE featurelist RBRACE
Rule 5     class -> CLASS type INHERITS type LBRACE featurelist RBRACE
Rule 6     type -> TYPE
Rule 7     identifier -> IDENTIFIER
Rule 8     formallist -> formal COMMA formallist
Rule 9     formallist -> formal
Rule 10    formal -> identifier COLON type
Rule 11    featurelist -> <empty>
Rule 12    featurelist -> feature SEMI featurelist
Rule 13    feature -> attribute
Rule 14    attribute -> identifier COLON type
Rule 15    attribute -> identifier COLON type LARROW exp
Rule 16    feature -> identifier LPAREN formallist RPAREN COLON type LBRACE exp RBRACE
Rule 17    feature -> identifier LPAREN RPAREN COLON type LBRACE exp RBRACE
Rule 18    explist_semi -> exp SEMI
Rule 19    explist_semi -> exp SEMI explist_semi
Rule 20    explist_comma -> exp
Rule 21    explist_comma -> exp COMMA explist_comma
Rule 22    exp -> identifier LARROW exp
Rule 23    exp -> exp DOT identifier LPAREN explist_comma RPAREN
Rule 24    exp -> exp DOT identifier LPAREN RPAREN
Rule 25    exp -> exp AT type DOT identifier LPAREN explist_comma RPAREN
Rule 26    exp -> exp AT type DOT identifier LPAREN RPAREN
Rule 27    exp -> identifier LPAREN explist_comma RPAREN
Rule 28    exp -> identifier LPAREN RPAREN
Rule 29    exp -> IF exp THEN exp ELSE exp FI
Rule 30    exp -> WHILE exp LOOP exp POOL
Rule 31    exp -> LBRACE explist_semi RBRACE
Rule 32    exp -> NEW type
Rule 33    exp -> ISVOID exp
Rule 34    exp -> exp ADD exp
Rule 35    exp -> exp SUBTRACT exp
Rule 36    exp -> exp MULTIPLY exp
Rule 37    exp -> exp DIVIDE exp
Rule 38    exp -> exp LT exp
Rule 39    exp -> exp LE exp
Rule 40    exp -> exp EQUAL exp
Rule 41    exp -> NOT exp
Rule 42    exp -> TILDE exp
Rule 43    exp -> identifier
Rule 44    exp -> INTEGER
Rule 45    exp -> STRING
Rule 46    exp -> TRUE
Rule 47    exp -> FALSE
Rule 48    exp -> LET attribute attributelist IN exp
Rule 49    attributelist -> <empty>
Rule 50    attributelist -> COMMA attribute attributelist
Rule 51    exp -> CASE exp OF elementlist ESAC
Rule 52    element -> identifier COLON type RARROW exp
Rule 53    elementlist -> element SEMI
Rule 54    elementlist -> element SEMI elementlist

Terminals, with rules where they appear

ADD                  : 34
AT                   : 25 26
CASE                 : 51
CLASS                : 4 5
COLON                : 10 14 15 16 17 52
COMMA                : 8 21 50
DIVIDE               : 37
DOT                  : 23 24 25 26
ELSE                 : 29
EQUAL                : 40
ESAC                 : 51
FALSE                : 47
FI                   : 29
IDENTIFIER           : 7
IF                   : 29
IN                   : 48
INHERITS             : 5
INTEGER              : 44
ISVOID               : 33
LARROW               : 15 22
LBRACE               : 4 5 16 17 31
LE                   : 39
LET                  : 48
LOOP                 : 30
LPAREN               : 16 17 23 24 25 26 27 28
LT                   : 38
MULTIPLY             : 36
NEW                  : 32
NOT                  : 41
OF                   : 51
POOL                 : 30
RARROW               : 52
RBRACE               : 4 5 16 17 31
RPAREN               : 16 17 23 24 25 26 27 28
SEMI                 : 2 3 12 18 19 53 54
STRING               : 45
SUBTRACT             : 35
THEN                 : 29
TILDE                : 42
TRUE                 : 46
TYPE                 : 6
WHILE                : 30
error                : 

Nonterminals, with rules where they appear

attribute            : 13 48 50
attributelist        : 48 50
class                : 2 3
classlist            : 1 3
element              : 53 54
elementlist          : 51 54
exp                  : 15 16 17 18 19 20 21 22 23 24 25 26 29 29 29 30 30 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 42 48 51 52
explist_comma        : 21 23 25 27
explist_semi         : 19 31
feature              : 12
featurelist          : 4 5 12
formal               : 8 9
formallist           : 8 16
identifier           : 10 14 15 16 17 22 23 24 25 26 27 28 43 52
program              : 0
type                 : 4 5 5 10 14 15 16 17 25 26 32 52

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . classlist
    (2) classlist -> . class SEMI
    (3) classlist -> . class SEMI classlist
    (4) class -> . CLASS type LBRACE featurelist RBRACE
    (5) class -> . CLASS type INHERITS type LBRACE featurelist RBRACE

    CLASS           shift and go to state 4

    program                        shift and go to state 1
    classlist                      shift and go to state 2
    class                          shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> classlist .

    $end            reduce using rule 1 (program -> classlist .)


state 3

    (2) classlist -> class . SEMI
    (3) classlist -> class . SEMI classlist

    SEMI            shift and go to state 5


state 4

    (4) class -> CLASS . type LBRACE featurelist RBRACE
    (5) class -> CLASS . type INHERITS type LBRACE featurelist RBRACE
    (6) type -> . TYPE

    TYPE            shift and go to state 7

    type                           shift and go to state 6

state 5

    (2) classlist -> class SEMI .
    (3) classlist -> class SEMI . classlist
    (2) classlist -> . class SEMI
    (3) classlist -> . class SEMI classlist
    (4) class -> . CLASS type LBRACE featurelist RBRACE
    (5) class -> . CLASS type INHERITS type LBRACE featurelist RBRACE

    $end            reduce using rule 2 (classlist -> class SEMI .)
    CLASS           shift and go to state 4

    class                          shift and go to state 3
    classlist                      shift and go to state 8

state 6

    (4) class -> CLASS type . LBRACE featurelist RBRACE
    (5) class -> CLASS type . INHERITS type LBRACE featurelist RBRACE

    LBRACE          shift and go to state 9
    INHERITS        shift and go to state 10


state 7

    (6) type -> TYPE .

    LBRACE          reduce using rule 6 (type -> TYPE .)
    INHERITS        reduce using rule 6 (type -> TYPE .)
    LARROW          reduce using rule 6 (type -> TYPE .)
    SEMI            reduce using rule 6 (type -> TYPE .)
    COMMA           reduce using rule 6 (type -> TYPE .)
    IN              reduce using rule 6 (type -> TYPE .)
    RPAREN          reduce using rule 6 (type -> TYPE .)
    DOT             reduce using rule 6 (type -> TYPE .)
    AT              reduce using rule 6 (type -> TYPE .)
    ADD             reduce using rule 6 (type -> TYPE .)
    SUBTRACT        reduce using rule 6 (type -> TYPE .)
    MULTIPLY        reduce using rule 6 (type -> TYPE .)
    DIVIDE          reduce using rule 6 (type -> TYPE .)
    LT              reduce using rule 6 (type -> TYPE .)
    LE              reduce using rule 6 (type -> TYPE .)
    EQUAL           reduce using rule 6 (type -> TYPE .)
    THEN            reduce using rule 6 (type -> TYPE .)
    LOOP            reduce using rule 6 (type -> TYPE .)
    OF              reduce using rule 6 (type -> TYPE .)
    RBRACE          reduce using rule 6 (type -> TYPE .)
    ELSE            reduce using rule 6 (type -> TYPE .)
    POOL            reduce using rule 6 (type -> TYPE .)
    FI              reduce using rule 6 (type -> TYPE .)
    RARROW          reduce using rule 6 (type -> TYPE .)


state 8

    (3) classlist -> class SEMI classlist .

    $end            reduce using rule 3 (classlist -> class SEMI classlist .)


state 9

    (4) class -> CLASS type LBRACE . featurelist RBRACE
    (11) featurelist -> .
    (12) featurelist -> . feature SEMI featurelist
    (13) feature -> . attribute
    (16) feature -> . identifier LPAREN formallist RPAREN COLON type LBRACE exp RBRACE
    (17) feature -> . identifier LPAREN RPAREN COLON type LBRACE exp RBRACE
    (14) attribute -> . identifier COLON type
    (15) attribute -> . identifier COLON type LARROW exp
    (7) identifier -> . IDENTIFIER

    RBRACE          reduce using rule 11 (featurelist -> .)
    IDENTIFIER      shift and go to state 15

    featurelist                    shift and go to state 11
    feature                        shift and go to state 12
    attribute                      shift and go to state 13
    identifier                     shift and go to state 14

state 10

    (5) class -> CLASS type INHERITS . type LBRACE featurelist RBRACE
    (6) type -> . TYPE

    TYPE            shift and go to state 7

    type                           shift and go to state 16

state 11

    (4) class -> CLASS type LBRACE featurelist . RBRACE

    RBRACE          shift and go to state 17


state 12

    (12) featurelist -> feature . SEMI featurelist

    SEMI            shift and go to state 18


state 13

    (13) feature -> attribute .

    SEMI            reduce using rule 13 (feature -> attribute .)


state 14

    (16) feature -> identifier . LPAREN formallist RPAREN COLON type LBRACE exp RBRACE
    (17) feature -> identifier . LPAREN RPAREN COLON type LBRACE exp RBRACE
    (14) attribute -> identifier . COLON type
    (15) attribute -> identifier . COLON type LARROW exp

    LPAREN          shift and go to state 19
    COLON           shift and go to state 20


state 15

    (7) identifier -> IDENTIFIER .

    LPAREN          reduce using rule 7 (identifier -> IDENTIFIER .)
    COLON           reduce using rule 7 (identifier -> IDENTIFIER .)
    LARROW          reduce using rule 7 (identifier -> IDENTIFIER .)
    DOT             reduce using rule 7 (identifier -> IDENTIFIER .)
    AT              reduce using rule 7 (identifier -> IDENTIFIER .)
    ADD             reduce using rule 7 (identifier -> IDENTIFIER .)
    SUBTRACT        reduce using rule 7 (identifier -> IDENTIFIER .)
    MULTIPLY        reduce using rule 7 (identifier -> IDENTIFIER .)
    DIVIDE          reduce using rule 7 (identifier -> IDENTIFIER .)
    LT              reduce using rule 7 (identifier -> IDENTIFIER .)
    LE              reduce using rule 7 (identifier -> IDENTIFIER .)
    EQUAL           reduce using rule 7 (identifier -> IDENTIFIER .)
    SEMI            reduce using rule 7 (identifier -> IDENTIFIER .)
    COMMA           reduce using rule 7 (identifier -> IDENTIFIER .)
    IN              reduce using rule 7 (identifier -> IDENTIFIER .)
    THEN            reduce using rule 7 (identifier -> IDENTIFIER .)
    LOOP            reduce using rule 7 (identifier -> IDENTIFIER .)
    OF              reduce using rule 7 (identifier -> IDENTIFIER .)
    RBRACE          reduce using rule 7 (identifier -> IDENTIFIER .)
    RPAREN          reduce using rule 7 (identifier -> IDENTIFIER .)
    ELSE            reduce using rule 7 (identifier -> IDENTIFIER .)
    POOL            reduce using rule 7 (identifier -> IDENTIFIER .)
    FI              reduce using rule 7 (identifier -> IDENTIFIER .)


state 16

    (5) class -> CLASS type INHERITS type . LBRACE featurelist RBRACE

    LBRACE          shift and go to state 21


state 17

    (4) class -> CLASS type LBRACE featurelist RBRACE .

    SEMI            reduce using rule 4 (class -> CLASS type LBRACE featurelist RBRACE .)


state 18

    (12) featurelist -> feature SEMI . featurelist
    (11) featurelist -> .
    (12) featurelist -> . feature SEMI featurelist
    (13) feature -> . attribute
    (16) feature -> . identifier LPAREN formallist RPAREN COLON type LBRACE exp RBRACE
    (17) feature -> . identifier LPAREN RPAREN COLON type LBRACE exp RBRACE
    (14) attribute -> . identifier COLON type
    (15) attribute -> . identifier COLON type LARROW exp
    (7) identifier -> . IDENTIFIER

    RBRACE          reduce using rule 11 (featurelist -> .)
    IDENTIFIER      shift and go to state 15

    feature                        shift and go to state 12
    featurelist                    shift and go to state 22
    attribute                      shift and go to state 13
    identifier                     shift and go to state 14

state 19

    (16) feature -> identifier LPAREN . formallist RPAREN COLON type LBRACE exp RBRACE
    (17) feature -> identifier LPAREN . RPAREN COLON type LBRACE exp RBRACE
    (8) formallist -> . formal COMMA formallist
    (9) formallist -> . formal
    (10) formal -> . identifier COLON type
    (7) identifier -> . IDENTIFIER

    RPAREN          shift and go to state 25
    IDENTIFIER      shift and go to state 15

    identifier                     shift and go to state 23
    formallist                     shift and go to state 24
    formal                         shift and go to state 26

state 20

    (14) attribute -> identifier COLON . type
    (15) attribute -> identifier COLON . type LARROW exp
    (6) type -> . TYPE

    TYPE            shift and go to state 7

    type                           shift and go to state 27

state 21

    (5) class -> CLASS type INHERITS type LBRACE . featurelist RBRACE
    (11) featurelist -> .
    (12) featurelist -> . feature SEMI featurelist
    (13) feature -> . attribute
    (16) feature -> . identifier LPAREN formallist RPAREN COLON type LBRACE exp RBRACE
    (17) feature -> . identifier LPAREN RPAREN COLON type LBRACE exp RBRACE
    (14) attribute -> . identifier COLON type
    (15) attribute -> . identifier COLON type LARROW exp
    (7) identifier -> . IDENTIFIER

    RBRACE          reduce using rule 11 (featurelist -> .)
    IDENTIFIER      shift and go to state 15

    featurelist                    shift and go to state 28
    feature                        shift and go to state 12
    attribute                      shift and go to state 13
    identifier                     shift and go to state 14

state 22

    (12) featurelist -> feature SEMI featurelist .

    RBRACE          reduce using rule 12 (featurelist -> feature SEMI featurelist .)


state 23

    (10) formal -> identifier . COLON type

    COLON           shift and go to state 29


state 24

    (16) feature -> identifier LPAREN formallist . RPAREN COLON type LBRACE exp RBRACE

    RPAREN          shift and go to state 30


state 25

    (17) feature -> identifier LPAREN RPAREN . COLON type LBRACE exp RBRACE

    COLON           shift and go to state 31


state 26

    (8) formallist -> formal . COMMA formallist
    (9) formallist -> formal .

    COMMA           shift and go to state 32
    RPAREN          reduce using rule 9 (formallist -> formal .)


state 27

    (14) attribute -> identifier COLON type .
    (15) attribute -> identifier COLON type . LARROW exp

    SEMI            reduce using rule 14 (attribute -> identifier COLON type .)
    COMMA           reduce using rule 14 (attribute -> identifier COLON type .)
    IN              reduce using rule 14 (attribute -> identifier COLON type .)
    LARROW          shift and go to state 33


state 28

    (5) class -> CLASS type INHERITS type LBRACE featurelist . RBRACE

    RBRACE          shift and go to state 34


state 29

    (10) formal -> identifier COLON . type
    (6) type -> . TYPE

    TYPE            shift and go to state 7

    type                           shift and go to state 35

state 30

    (16) feature -> identifier LPAREN formallist RPAREN . COLON type LBRACE exp RBRACE

    COLON           shift and go to state 36


state 31

    (17) feature -> identifier LPAREN RPAREN COLON . type LBRACE exp RBRACE
    (6) type -> . TYPE

    TYPE            shift and go to state 7

    type                           shift and go to state 37

state 32

    (8) formallist -> formal COMMA . formallist
    (8) formallist -> . formal COMMA formallist
    (9) formallist -> . formal
    (10) formal -> . identifier COLON type
    (7) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 15

    formal                         shift and go to state 26
    formallist                     shift and go to state 38
    identifier                     shift and go to state 23

state 33

    (15) attribute -> identifier COLON type LARROW . exp
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    identifier                     shift and go to state 39
    exp                            shift and go to state 40

state 34

    (5) class -> CLASS type INHERITS type LBRACE featurelist RBRACE .

    SEMI            reduce using rule 5 (class -> CLASS type INHERITS type LBRACE featurelist RBRACE .)


state 35

    (10) formal -> identifier COLON type .

    COMMA           reduce using rule 10 (formal -> identifier COLON type .)
    RPAREN          reduce using rule 10 (formal -> identifier COLON type .)


state 36

    (16) feature -> identifier LPAREN formallist RPAREN COLON . type LBRACE exp RBRACE
    (6) type -> . TYPE

    TYPE            shift and go to state 7

    type                           shift and go to state 54

state 37

    (17) feature -> identifier LPAREN RPAREN COLON type . LBRACE exp RBRACE

    LBRACE          shift and go to state 55


state 38

    (8) formallist -> formal COMMA formallist .

    RPAREN          reduce using rule 8 (formallist -> formal COMMA formallist .)


state 39

    (22) exp -> identifier . LARROW exp
    (27) exp -> identifier . LPAREN explist_comma RPAREN
    (28) exp -> identifier . LPAREN RPAREN
    (43) exp -> identifier .

    LARROW          shift and go to state 56
    LPAREN          shift and go to state 57
    DOT             reduce using rule 43 (exp -> identifier .)
    AT              reduce using rule 43 (exp -> identifier .)
    ADD             reduce using rule 43 (exp -> identifier .)
    SUBTRACT        reduce using rule 43 (exp -> identifier .)
    MULTIPLY        reduce using rule 43 (exp -> identifier .)
    DIVIDE          reduce using rule 43 (exp -> identifier .)
    LT              reduce using rule 43 (exp -> identifier .)
    LE              reduce using rule 43 (exp -> identifier .)
    EQUAL           reduce using rule 43 (exp -> identifier .)
    SEMI            reduce using rule 43 (exp -> identifier .)
    COMMA           reduce using rule 43 (exp -> identifier .)
    IN              reduce using rule 43 (exp -> identifier .)
    THEN            reduce using rule 43 (exp -> identifier .)
    LOOP            reduce using rule 43 (exp -> identifier .)
    OF              reduce using rule 43 (exp -> identifier .)
    RBRACE          reduce using rule 43 (exp -> identifier .)
    RPAREN          reduce using rule 43 (exp -> identifier .)
    ELSE            reduce using rule 43 (exp -> identifier .)
    POOL            reduce using rule 43 (exp -> identifier .)
    FI              reduce using rule 43 (exp -> identifier .)


state 40

    (15) attribute -> identifier COLON type LARROW exp .
    (23) exp -> exp . DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> exp . DOT identifier LPAREN RPAREN
    (25) exp -> exp . AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> exp . AT type DOT identifier LPAREN RPAREN
    (34) exp -> exp . ADD exp
    (35) exp -> exp . SUBTRACT exp
    (36) exp -> exp . MULTIPLY exp
    (37) exp -> exp . DIVIDE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . LE exp
    (40) exp -> exp . EQUAL exp

    SEMI            reduce using rule 15 (attribute -> identifier COLON type LARROW exp .)
    COMMA           reduce using rule 15 (attribute -> identifier COLON type LARROW exp .)
    IN              reduce using rule 15 (attribute -> identifier COLON type LARROW exp .)
    DOT             shift and go to state 58
    AT              shift and go to state 59
    ADD             shift and go to state 60
    SUBTRACT        shift and go to state 61
    MULTIPLY        shift and go to state 62
    DIVIDE          shift and go to state 63
    LT              shift and go to state 64
    LE              shift and go to state 65
    EQUAL           shift and go to state 66


state 41

    (29) exp -> IF . exp THEN exp ELSE exp FI
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    exp                            shift and go to state 67
    identifier                     shift and go to state 39

state 42

    (30) exp -> WHILE . exp LOOP exp POOL
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    exp                            shift and go to state 68
    identifier                     shift and go to state 39

state 43

    (31) exp -> LBRACE . explist_semi RBRACE
    (18) explist_semi -> . exp SEMI
    (19) explist_semi -> . exp SEMI explist_semi
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    explist_semi                   shift and go to state 69
    exp                            shift and go to state 70
    identifier                     shift and go to state 39

state 44

    (32) exp -> NEW . type
    (6) type -> . TYPE

    TYPE            shift and go to state 7

    type                           shift and go to state 71

state 45

    (33) exp -> ISVOID . exp
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    exp                            shift and go to state 72
    identifier                     shift and go to state 39

state 46

    (41) exp -> NOT . exp
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    exp                            shift and go to state 73
    identifier                     shift and go to state 39

state 47

    (42) exp -> TILDE . exp
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    exp                            shift and go to state 74
    identifier                     shift and go to state 39

state 48

    (44) exp -> INTEGER .

    DOT             reduce using rule 44 (exp -> INTEGER .)
    AT              reduce using rule 44 (exp -> INTEGER .)
    ADD             reduce using rule 44 (exp -> INTEGER .)
    SUBTRACT        reduce using rule 44 (exp -> INTEGER .)
    MULTIPLY        reduce using rule 44 (exp -> INTEGER .)
    DIVIDE          reduce using rule 44 (exp -> INTEGER .)
    LT              reduce using rule 44 (exp -> INTEGER .)
    LE              reduce using rule 44 (exp -> INTEGER .)
    EQUAL           reduce using rule 44 (exp -> INTEGER .)
    SEMI            reduce using rule 44 (exp -> INTEGER .)
    COMMA           reduce using rule 44 (exp -> INTEGER .)
    IN              reduce using rule 44 (exp -> INTEGER .)
    THEN            reduce using rule 44 (exp -> INTEGER .)
    LOOP            reduce using rule 44 (exp -> INTEGER .)
    OF              reduce using rule 44 (exp -> INTEGER .)
    RBRACE          reduce using rule 44 (exp -> INTEGER .)
    RPAREN          reduce using rule 44 (exp -> INTEGER .)
    ELSE            reduce using rule 44 (exp -> INTEGER .)
    POOL            reduce using rule 44 (exp -> INTEGER .)
    FI              reduce using rule 44 (exp -> INTEGER .)


state 49

    (45) exp -> STRING .

    DOT             reduce using rule 45 (exp -> STRING .)
    AT              reduce using rule 45 (exp -> STRING .)
    ADD             reduce using rule 45 (exp -> STRING .)
    SUBTRACT        reduce using rule 45 (exp -> STRING .)
    MULTIPLY        reduce using rule 45 (exp -> STRING .)
    DIVIDE          reduce using rule 45 (exp -> STRING .)
    LT              reduce using rule 45 (exp -> STRING .)
    LE              reduce using rule 45 (exp -> STRING .)
    EQUAL           reduce using rule 45 (exp -> STRING .)
    SEMI            reduce using rule 45 (exp -> STRING .)
    COMMA           reduce using rule 45 (exp -> STRING .)
    IN              reduce using rule 45 (exp -> STRING .)
    THEN            reduce using rule 45 (exp -> STRING .)
    LOOP            reduce using rule 45 (exp -> STRING .)
    OF              reduce using rule 45 (exp -> STRING .)
    RBRACE          reduce using rule 45 (exp -> STRING .)
    RPAREN          reduce using rule 45 (exp -> STRING .)
    ELSE            reduce using rule 45 (exp -> STRING .)
    POOL            reduce using rule 45 (exp -> STRING .)
    FI              reduce using rule 45 (exp -> STRING .)


state 50

    (46) exp -> TRUE .

    DOT             reduce using rule 46 (exp -> TRUE .)
    AT              reduce using rule 46 (exp -> TRUE .)
    ADD             reduce using rule 46 (exp -> TRUE .)
    SUBTRACT        reduce using rule 46 (exp -> TRUE .)
    MULTIPLY        reduce using rule 46 (exp -> TRUE .)
    DIVIDE          reduce using rule 46 (exp -> TRUE .)
    LT              reduce using rule 46 (exp -> TRUE .)
    LE              reduce using rule 46 (exp -> TRUE .)
    EQUAL           reduce using rule 46 (exp -> TRUE .)
    SEMI            reduce using rule 46 (exp -> TRUE .)
    COMMA           reduce using rule 46 (exp -> TRUE .)
    IN              reduce using rule 46 (exp -> TRUE .)
    THEN            reduce using rule 46 (exp -> TRUE .)
    LOOP            reduce using rule 46 (exp -> TRUE .)
    OF              reduce using rule 46 (exp -> TRUE .)
    RBRACE          reduce using rule 46 (exp -> TRUE .)
    RPAREN          reduce using rule 46 (exp -> TRUE .)
    ELSE            reduce using rule 46 (exp -> TRUE .)
    POOL            reduce using rule 46 (exp -> TRUE .)
    FI              reduce using rule 46 (exp -> TRUE .)


state 51

    (47) exp -> FALSE .

    DOT             reduce using rule 47 (exp -> FALSE .)
    AT              reduce using rule 47 (exp -> FALSE .)
    ADD             reduce using rule 47 (exp -> FALSE .)
    SUBTRACT        reduce using rule 47 (exp -> FALSE .)
    MULTIPLY        reduce using rule 47 (exp -> FALSE .)
    DIVIDE          reduce using rule 47 (exp -> FALSE .)
    LT              reduce using rule 47 (exp -> FALSE .)
    LE              reduce using rule 47 (exp -> FALSE .)
    EQUAL           reduce using rule 47 (exp -> FALSE .)
    SEMI            reduce using rule 47 (exp -> FALSE .)
    COMMA           reduce using rule 47 (exp -> FALSE .)
    IN              reduce using rule 47 (exp -> FALSE .)
    THEN            reduce using rule 47 (exp -> FALSE .)
    LOOP            reduce using rule 47 (exp -> FALSE .)
    OF              reduce using rule 47 (exp -> FALSE .)
    RBRACE          reduce using rule 47 (exp -> FALSE .)
    RPAREN          reduce using rule 47 (exp -> FALSE .)
    ELSE            reduce using rule 47 (exp -> FALSE .)
    POOL            reduce using rule 47 (exp -> FALSE .)
    FI              reduce using rule 47 (exp -> FALSE .)


state 52

    (48) exp -> LET . attribute attributelist IN exp
    (14) attribute -> . identifier COLON type
    (15) attribute -> . identifier COLON type LARROW exp
    (7) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 15

    attribute                      shift and go to state 75
    identifier                     shift and go to state 76

state 53

    (51) exp -> CASE . exp OF elementlist ESAC
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    exp                            shift and go to state 77
    identifier                     shift and go to state 39

state 54

    (16) feature -> identifier LPAREN formallist RPAREN COLON type . LBRACE exp RBRACE

    LBRACE          shift and go to state 78


state 55

    (17) feature -> identifier LPAREN RPAREN COLON type LBRACE . exp RBRACE
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    identifier                     shift and go to state 39
    exp                            shift and go to state 79

state 56

    (22) exp -> identifier LARROW . exp
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    identifier                     shift and go to state 39
    exp                            shift and go to state 80

state 57

    (27) exp -> identifier LPAREN . explist_comma RPAREN
    (28) exp -> identifier LPAREN . RPAREN
    (20) explist_comma -> . exp
    (21) explist_comma -> . exp COMMA explist_comma
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    RPAREN          shift and go to state 82
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    identifier                     shift and go to state 39
    explist_comma                  shift and go to state 81
    exp                            shift and go to state 83

state 58

    (23) exp -> exp DOT . identifier LPAREN explist_comma RPAREN
    (24) exp -> exp DOT . identifier LPAREN RPAREN
    (7) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 15

    identifier                     shift and go to state 84

state 59

    (25) exp -> exp AT . type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> exp AT . type DOT identifier LPAREN RPAREN
    (6) type -> . TYPE

    TYPE            shift and go to state 7

    type                           shift and go to state 85

state 60

    (34) exp -> exp ADD . exp
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    exp                            shift and go to state 86
    identifier                     shift and go to state 39

state 61

    (35) exp -> exp SUBTRACT . exp
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    exp                            shift and go to state 87
    identifier                     shift and go to state 39

state 62

    (36) exp -> exp MULTIPLY . exp
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    exp                            shift and go to state 88
    identifier                     shift and go to state 39

state 63

    (37) exp -> exp DIVIDE . exp
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    exp                            shift and go to state 89
    identifier                     shift and go to state 39

state 64

    (38) exp -> exp LT . exp
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    exp                            shift and go to state 90
    identifier                     shift and go to state 39

state 65

    (39) exp -> exp LE . exp
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    exp                            shift and go to state 91
    identifier                     shift and go to state 39

state 66

    (40) exp -> exp EQUAL . exp
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    exp                            shift and go to state 92
    identifier                     shift and go to state 39

state 67

    (29) exp -> IF exp . THEN exp ELSE exp FI
    (23) exp -> exp . DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> exp . DOT identifier LPAREN RPAREN
    (25) exp -> exp . AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> exp . AT type DOT identifier LPAREN RPAREN
    (34) exp -> exp . ADD exp
    (35) exp -> exp . SUBTRACT exp
    (36) exp -> exp . MULTIPLY exp
    (37) exp -> exp . DIVIDE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . LE exp
    (40) exp -> exp . EQUAL exp

    THEN            shift and go to state 93
    DOT             shift and go to state 58
    AT              shift and go to state 59
    ADD             shift and go to state 60
    SUBTRACT        shift and go to state 61
    MULTIPLY        shift and go to state 62
    DIVIDE          shift and go to state 63
    LT              shift and go to state 64
    LE              shift and go to state 65
    EQUAL           shift and go to state 66


state 68

    (30) exp -> WHILE exp . LOOP exp POOL
    (23) exp -> exp . DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> exp . DOT identifier LPAREN RPAREN
    (25) exp -> exp . AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> exp . AT type DOT identifier LPAREN RPAREN
    (34) exp -> exp . ADD exp
    (35) exp -> exp . SUBTRACT exp
    (36) exp -> exp . MULTIPLY exp
    (37) exp -> exp . DIVIDE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . LE exp
    (40) exp -> exp . EQUAL exp

    LOOP            shift and go to state 94
    DOT             shift and go to state 58
    AT              shift and go to state 59
    ADD             shift and go to state 60
    SUBTRACT        shift and go to state 61
    MULTIPLY        shift and go to state 62
    DIVIDE          shift and go to state 63
    LT              shift and go to state 64
    LE              shift and go to state 65
    EQUAL           shift and go to state 66


state 69

    (31) exp -> LBRACE explist_semi . RBRACE

    RBRACE          shift and go to state 95


state 70

    (18) explist_semi -> exp . SEMI
    (19) explist_semi -> exp . SEMI explist_semi
    (23) exp -> exp . DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> exp . DOT identifier LPAREN RPAREN
    (25) exp -> exp . AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> exp . AT type DOT identifier LPAREN RPAREN
    (34) exp -> exp . ADD exp
    (35) exp -> exp . SUBTRACT exp
    (36) exp -> exp . MULTIPLY exp
    (37) exp -> exp . DIVIDE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . LE exp
    (40) exp -> exp . EQUAL exp

    SEMI            shift and go to state 96
    DOT             shift and go to state 58
    AT              shift and go to state 59
    ADD             shift and go to state 60
    SUBTRACT        shift and go to state 61
    MULTIPLY        shift and go to state 62
    DIVIDE          shift and go to state 63
    LT              shift and go to state 64
    LE              shift and go to state 65
    EQUAL           shift and go to state 66


state 71

    (32) exp -> NEW type .

    DOT             reduce using rule 32 (exp -> NEW type .)
    AT              reduce using rule 32 (exp -> NEW type .)
    ADD             reduce using rule 32 (exp -> NEW type .)
    SUBTRACT        reduce using rule 32 (exp -> NEW type .)
    MULTIPLY        reduce using rule 32 (exp -> NEW type .)
    DIVIDE          reduce using rule 32 (exp -> NEW type .)
    LT              reduce using rule 32 (exp -> NEW type .)
    LE              reduce using rule 32 (exp -> NEW type .)
    EQUAL           reduce using rule 32 (exp -> NEW type .)
    SEMI            reduce using rule 32 (exp -> NEW type .)
    COMMA           reduce using rule 32 (exp -> NEW type .)
    IN              reduce using rule 32 (exp -> NEW type .)
    THEN            reduce using rule 32 (exp -> NEW type .)
    LOOP            reduce using rule 32 (exp -> NEW type .)
    OF              reduce using rule 32 (exp -> NEW type .)
    RBRACE          reduce using rule 32 (exp -> NEW type .)
    RPAREN          reduce using rule 32 (exp -> NEW type .)
    ELSE            reduce using rule 32 (exp -> NEW type .)
    POOL            reduce using rule 32 (exp -> NEW type .)
    FI              reduce using rule 32 (exp -> NEW type .)


state 72

    (33) exp -> ISVOID exp .
    (23) exp -> exp . DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> exp . DOT identifier LPAREN RPAREN
    (25) exp -> exp . AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> exp . AT type DOT identifier LPAREN RPAREN
    (34) exp -> exp . ADD exp
    (35) exp -> exp . SUBTRACT exp
    (36) exp -> exp . MULTIPLY exp
    (37) exp -> exp . DIVIDE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . LE exp
    (40) exp -> exp . EQUAL exp

    DOT             reduce using rule 33 (exp -> ISVOID exp .)
    AT              reduce using rule 33 (exp -> ISVOID exp .)
    SEMI            reduce using rule 33 (exp -> ISVOID exp .)
    COMMA           reduce using rule 33 (exp -> ISVOID exp .)
    IN              reduce using rule 33 (exp -> ISVOID exp .)
    THEN            reduce using rule 33 (exp -> ISVOID exp .)
    LOOP            reduce using rule 33 (exp -> ISVOID exp .)
    OF              reduce using rule 33 (exp -> ISVOID exp .)
    RBRACE          reduce using rule 33 (exp -> ISVOID exp .)
    RPAREN          reduce using rule 33 (exp -> ISVOID exp .)
    ELSE            reduce using rule 33 (exp -> ISVOID exp .)
    POOL            reduce using rule 33 (exp -> ISVOID exp .)
    FI              reduce using rule 33 (exp -> ISVOID exp .)
    ADD             shift and go to state 60
    SUBTRACT        shift and go to state 61
    MULTIPLY        shift and go to state 62
    DIVIDE          shift and go to state 63
    LT              shift and go to state 64
    LE              shift and go to state 65
    EQUAL           shift and go to state 66

  ! ADD             [ reduce using rule 33 (exp -> ISVOID exp .) ]
  ! SUBTRACT        [ reduce using rule 33 (exp -> ISVOID exp .) ]
  ! MULTIPLY        [ reduce using rule 33 (exp -> ISVOID exp .) ]
  ! DIVIDE          [ reduce using rule 33 (exp -> ISVOID exp .) ]
  ! LT              [ reduce using rule 33 (exp -> ISVOID exp .) ]
  ! LE              [ reduce using rule 33 (exp -> ISVOID exp .) ]
  ! EQUAL           [ reduce using rule 33 (exp -> ISVOID exp .) ]
  ! DOT             [ shift and go to state 58 ]
  ! AT              [ shift and go to state 59 ]


state 73

    (41) exp -> NOT exp .
    (23) exp -> exp . DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> exp . DOT identifier LPAREN RPAREN
    (25) exp -> exp . AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> exp . AT type DOT identifier LPAREN RPAREN
    (34) exp -> exp . ADD exp
    (35) exp -> exp . SUBTRACT exp
    (36) exp -> exp . MULTIPLY exp
    (37) exp -> exp . DIVIDE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . LE exp
    (40) exp -> exp . EQUAL exp

    DOT             reduce using rule 41 (exp -> NOT exp .)
    AT              reduce using rule 41 (exp -> NOT exp .)
    ADD             reduce using rule 41 (exp -> NOT exp .)
    SUBTRACT        reduce using rule 41 (exp -> NOT exp .)
    MULTIPLY        reduce using rule 41 (exp -> NOT exp .)
    DIVIDE          reduce using rule 41 (exp -> NOT exp .)
    LT              reduce using rule 41 (exp -> NOT exp .)
    LE              reduce using rule 41 (exp -> NOT exp .)
    EQUAL           reduce using rule 41 (exp -> NOT exp .)
    SEMI            reduce using rule 41 (exp -> NOT exp .)
    COMMA           reduce using rule 41 (exp -> NOT exp .)
    IN              reduce using rule 41 (exp -> NOT exp .)
    THEN            reduce using rule 41 (exp -> NOT exp .)
    LOOP            reduce using rule 41 (exp -> NOT exp .)
    OF              reduce using rule 41 (exp -> NOT exp .)
    RBRACE          reduce using rule 41 (exp -> NOT exp .)
    RPAREN          reduce using rule 41 (exp -> NOT exp .)
    ELSE            reduce using rule 41 (exp -> NOT exp .)
    POOL            reduce using rule 41 (exp -> NOT exp .)
    FI              reduce using rule 41 (exp -> NOT exp .)

  ! DOT             [ shift and go to state 58 ]
  ! AT              [ shift and go to state 59 ]
  ! ADD             [ shift and go to state 60 ]
  ! SUBTRACT        [ shift and go to state 61 ]
  ! MULTIPLY        [ shift and go to state 62 ]
  ! DIVIDE          [ shift and go to state 63 ]
  ! LT              [ shift and go to state 64 ]
  ! LE              [ shift and go to state 65 ]
  ! EQUAL           [ shift and go to state 66 ]


state 74

    (42) exp -> TILDE exp .
    (23) exp -> exp . DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> exp . DOT identifier LPAREN RPAREN
    (25) exp -> exp . AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> exp . AT type DOT identifier LPAREN RPAREN
    (34) exp -> exp . ADD exp
    (35) exp -> exp . SUBTRACT exp
    (36) exp -> exp . MULTIPLY exp
    (37) exp -> exp . DIVIDE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . LE exp
    (40) exp -> exp . EQUAL exp

    DOT             reduce using rule 42 (exp -> TILDE exp .)
    AT              reduce using rule 42 (exp -> TILDE exp .)
    SEMI            reduce using rule 42 (exp -> TILDE exp .)
    COMMA           reduce using rule 42 (exp -> TILDE exp .)
    IN              reduce using rule 42 (exp -> TILDE exp .)
    THEN            reduce using rule 42 (exp -> TILDE exp .)
    LOOP            reduce using rule 42 (exp -> TILDE exp .)
    OF              reduce using rule 42 (exp -> TILDE exp .)
    RBRACE          reduce using rule 42 (exp -> TILDE exp .)
    RPAREN          reduce using rule 42 (exp -> TILDE exp .)
    ELSE            reduce using rule 42 (exp -> TILDE exp .)
    POOL            reduce using rule 42 (exp -> TILDE exp .)
    FI              reduce using rule 42 (exp -> TILDE exp .)
    ADD             shift and go to state 60
    SUBTRACT        shift and go to state 61
    MULTIPLY        shift and go to state 62
    DIVIDE          shift and go to state 63
    LT              shift and go to state 64
    LE              shift and go to state 65
    EQUAL           shift and go to state 66

  ! ADD             [ reduce using rule 42 (exp -> TILDE exp .) ]
  ! SUBTRACT        [ reduce using rule 42 (exp -> TILDE exp .) ]
  ! MULTIPLY        [ reduce using rule 42 (exp -> TILDE exp .) ]
  ! DIVIDE          [ reduce using rule 42 (exp -> TILDE exp .) ]
  ! LT              [ reduce using rule 42 (exp -> TILDE exp .) ]
  ! LE              [ reduce using rule 42 (exp -> TILDE exp .) ]
  ! EQUAL           [ reduce using rule 42 (exp -> TILDE exp .) ]
  ! DOT             [ shift and go to state 58 ]
  ! AT              [ shift and go to state 59 ]


state 75

    (48) exp -> LET attribute . attributelist IN exp
    (49) attributelist -> .
    (50) attributelist -> . COMMA attribute attributelist

    IN              reduce using rule 49 (attributelist -> .)
    COMMA           shift and go to state 98

    attributelist                  shift and go to state 97

state 76

    (14) attribute -> identifier . COLON type
    (15) attribute -> identifier . COLON type LARROW exp

    COLON           shift and go to state 20


state 77

    (51) exp -> CASE exp . OF elementlist ESAC
    (23) exp -> exp . DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> exp . DOT identifier LPAREN RPAREN
    (25) exp -> exp . AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> exp . AT type DOT identifier LPAREN RPAREN
    (34) exp -> exp . ADD exp
    (35) exp -> exp . SUBTRACT exp
    (36) exp -> exp . MULTIPLY exp
    (37) exp -> exp . DIVIDE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . LE exp
    (40) exp -> exp . EQUAL exp

    OF              shift and go to state 99
    DOT             shift and go to state 58
    AT              shift and go to state 59
    ADD             shift and go to state 60
    SUBTRACT        shift and go to state 61
    MULTIPLY        shift and go to state 62
    DIVIDE          shift and go to state 63
    LT              shift and go to state 64
    LE              shift and go to state 65
    EQUAL           shift and go to state 66


state 78

    (16) feature -> identifier LPAREN formallist RPAREN COLON type LBRACE . exp RBRACE
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    identifier                     shift and go to state 39
    exp                            shift and go to state 100

state 79

    (17) feature -> identifier LPAREN RPAREN COLON type LBRACE exp . RBRACE
    (23) exp -> exp . DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> exp . DOT identifier LPAREN RPAREN
    (25) exp -> exp . AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> exp . AT type DOT identifier LPAREN RPAREN
    (34) exp -> exp . ADD exp
    (35) exp -> exp . SUBTRACT exp
    (36) exp -> exp . MULTIPLY exp
    (37) exp -> exp . DIVIDE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . LE exp
    (40) exp -> exp . EQUAL exp

    RBRACE          shift and go to state 101
    DOT             shift and go to state 58
    AT              shift and go to state 59
    ADD             shift and go to state 60
    SUBTRACT        shift and go to state 61
    MULTIPLY        shift and go to state 62
    DIVIDE          shift and go to state 63
    LT              shift and go to state 64
    LE              shift and go to state 65
    EQUAL           shift and go to state 66


state 80

    (22) exp -> identifier LARROW exp .
    (23) exp -> exp . DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> exp . DOT identifier LPAREN RPAREN
    (25) exp -> exp . AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> exp . AT type DOT identifier LPAREN RPAREN
    (34) exp -> exp . ADD exp
    (35) exp -> exp . SUBTRACT exp
    (36) exp -> exp . MULTIPLY exp
    (37) exp -> exp . DIVIDE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . LE exp
    (40) exp -> exp . EQUAL exp

    DOT             reduce using rule 22 (exp -> identifier LARROW exp .)
    AT              reduce using rule 22 (exp -> identifier LARROW exp .)
    ADD             reduce using rule 22 (exp -> identifier LARROW exp .)
    SUBTRACT        reduce using rule 22 (exp -> identifier LARROW exp .)
    MULTIPLY        reduce using rule 22 (exp -> identifier LARROW exp .)
    DIVIDE          reduce using rule 22 (exp -> identifier LARROW exp .)
    LT              reduce using rule 22 (exp -> identifier LARROW exp .)
    LE              reduce using rule 22 (exp -> identifier LARROW exp .)
    EQUAL           reduce using rule 22 (exp -> identifier LARROW exp .)
    SEMI            reduce using rule 22 (exp -> identifier LARROW exp .)
    COMMA           reduce using rule 22 (exp -> identifier LARROW exp .)
    IN              reduce using rule 22 (exp -> identifier LARROW exp .)
    THEN            reduce using rule 22 (exp -> identifier LARROW exp .)
    LOOP            reduce using rule 22 (exp -> identifier LARROW exp .)
    OF              reduce using rule 22 (exp -> identifier LARROW exp .)
    RBRACE          reduce using rule 22 (exp -> identifier LARROW exp .)
    RPAREN          reduce using rule 22 (exp -> identifier LARROW exp .)
    ELSE            reduce using rule 22 (exp -> identifier LARROW exp .)
    POOL            reduce using rule 22 (exp -> identifier LARROW exp .)
    FI              reduce using rule 22 (exp -> identifier LARROW exp .)

  ! DOT             [ shift and go to state 58 ]
  ! AT              [ shift and go to state 59 ]
  ! ADD             [ shift and go to state 60 ]
  ! SUBTRACT        [ shift and go to state 61 ]
  ! MULTIPLY        [ shift and go to state 62 ]
  ! DIVIDE          [ shift and go to state 63 ]
  ! LT              [ shift and go to state 64 ]
  ! LE              [ shift and go to state 65 ]
  ! EQUAL           [ shift and go to state 66 ]


state 81

    (27) exp -> identifier LPAREN explist_comma . RPAREN

    RPAREN          shift and go to state 102


state 82

    (28) exp -> identifier LPAREN RPAREN .

    DOT             reduce using rule 28 (exp -> identifier LPAREN RPAREN .)
    AT              reduce using rule 28 (exp -> identifier LPAREN RPAREN .)
    ADD             reduce using rule 28 (exp -> identifier LPAREN RPAREN .)
    SUBTRACT        reduce using rule 28 (exp -> identifier LPAREN RPAREN .)
    MULTIPLY        reduce using rule 28 (exp -> identifier LPAREN RPAREN .)
    DIVIDE          reduce using rule 28 (exp -> identifier LPAREN RPAREN .)
    LT              reduce using rule 28 (exp -> identifier LPAREN RPAREN .)
    LE              reduce using rule 28 (exp -> identifier LPAREN RPAREN .)
    EQUAL           reduce using rule 28 (exp -> identifier LPAREN RPAREN .)
    SEMI            reduce using rule 28 (exp -> identifier LPAREN RPAREN .)
    COMMA           reduce using rule 28 (exp -> identifier LPAREN RPAREN .)
    IN              reduce using rule 28 (exp -> identifier LPAREN RPAREN .)
    THEN            reduce using rule 28 (exp -> identifier LPAREN RPAREN .)
    LOOP            reduce using rule 28 (exp -> identifier LPAREN RPAREN .)
    OF              reduce using rule 28 (exp -> identifier LPAREN RPAREN .)
    RBRACE          reduce using rule 28 (exp -> identifier LPAREN RPAREN .)
    RPAREN          reduce using rule 28 (exp -> identifier LPAREN RPAREN .)
    ELSE            reduce using rule 28 (exp -> identifier LPAREN RPAREN .)
    POOL            reduce using rule 28 (exp -> identifier LPAREN RPAREN .)
    FI              reduce using rule 28 (exp -> identifier LPAREN RPAREN .)


state 83

    (20) explist_comma -> exp .
    (21) explist_comma -> exp . COMMA explist_comma
    (23) exp -> exp . DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> exp . DOT identifier LPAREN RPAREN
    (25) exp -> exp . AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> exp . AT type DOT identifier LPAREN RPAREN
    (34) exp -> exp . ADD exp
    (35) exp -> exp . SUBTRACT exp
    (36) exp -> exp . MULTIPLY exp
    (37) exp -> exp . DIVIDE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . LE exp
    (40) exp -> exp . EQUAL exp

    RPAREN          reduce using rule 20 (explist_comma -> exp .)
    COMMA           shift and go to state 103
    DOT             shift and go to state 58
    AT              shift and go to state 59
    ADD             shift and go to state 60
    SUBTRACT        shift and go to state 61
    MULTIPLY        shift and go to state 62
    DIVIDE          shift and go to state 63
    LT              shift and go to state 64
    LE              shift and go to state 65
    EQUAL           shift and go to state 66


state 84

    (23) exp -> exp DOT identifier . LPAREN explist_comma RPAREN
    (24) exp -> exp DOT identifier . LPAREN RPAREN

    LPAREN          shift and go to state 104


state 85

    (25) exp -> exp AT type . DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> exp AT type . DOT identifier LPAREN RPAREN

    DOT             shift and go to state 105


state 86

    (34) exp -> exp ADD exp .
    (23) exp -> exp . DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> exp . DOT identifier LPAREN RPAREN
    (25) exp -> exp . AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> exp . AT type DOT identifier LPAREN RPAREN
    (34) exp -> exp . ADD exp
    (35) exp -> exp . SUBTRACT exp
    (36) exp -> exp . MULTIPLY exp
    (37) exp -> exp . DIVIDE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . LE exp
    (40) exp -> exp . EQUAL exp

    DOT             reduce using rule 34 (exp -> exp ADD exp .)
    AT              reduce using rule 34 (exp -> exp ADD exp .)
    ADD             reduce using rule 34 (exp -> exp ADD exp .)
    SUBTRACT        reduce using rule 34 (exp -> exp ADD exp .)
    SEMI            reduce using rule 34 (exp -> exp ADD exp .)
    COMMA           reduce using rule 34 (exp -> exp ADD exp .)
    IN              reduce using rule 34 (exp -> exp ADD exp .)
    THEN            reduce using rule 34 (exp -> exp ADD exp .)
    LOOP            reduce using rule 34 (exp -> exp ADD exp .)
    OF              reduce using rule 34 (exp -> exp ADD exp .)
    RBRACE          reduce using rule 34 (exp -> exp ADD exp .)
    RPAREN          reduce using rule 34 (exp -> exp ADD exp .)
    ELSE            reduce using rule 34 (exp -> exp ADD exp .)
    POOL            reduce using rule 34 (exp -> exp ADD exp .)
    FI              reduce using rule 34 (exp -> exp ADD exp .)
    MULTIPLY        shift and go to state 62
    DIVIDE          shift and go to state 63
    LT              shift and go to state 64
    LE              shift and go to state 65
    EQUAL           shift and go to state 66

  ! MULTIPLY        [ reduce using rule 34 (exp -> exp ADD exp .) ]
  ! DIVIDE          [ reduce using rule 34 (exp -> exp ADD exp .) ]
  ! LT              [ reduce using rule 34 (exp -> exp ADD exp .) ]
  ! LE              [ reduce using rule 34 (exp -> exp ADD exp .) ]
  ! EQUAL           [ reduce using rule 34 (exp -> exp ADD exp .) ]
  ! DOT             [ shift and go to state 58 ]
  ! AT              [ shift and go to state 59 ]
  ! ADD             [ shift and go to state 60 ]
  ! SUBTRACT        [ shift and go to state 61 ]


state 87

    (35) exp -> exp SUBTRACT exp .
    (23) exp -> exp . DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> exp . DOT identifier LPAREN RPAREN
    (25) exp -> exp . AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> exp . AT type DOT identifier LPAREN RPAREN
    (34) exp -> exp . ADD exp
    (35) exp -> exp . SUBTRACT exp
    (36) exp -> exp . MULTIPLY exp
    (37) exp -> exp . DIVIDE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . LE exp
    (40) exp -> exp . EQUAL exp

    DOT             reduce using rule 35 (exp -> exp SUBTRACT exp .)
    AT              reduce using rule 35 (exp -> exp SUBTRACT exp .)
    ADD             reduce using rule 35 (exp -> exp SUBTRACT exp .)
    SUBTRACT        reduce using rule 35 (exp -> exp SUBTRACT exp .)
    SEMI            reduce using rule 35 (exp -> exp SUBTRACT exp .)
    COMMA           reduce using rule 35 (exp -> exp SUBTRACT exp .)
    IN              reduce using rule 35 (exp -> exp SUBTRACT exp .)
    THEN            reduce using rule 35 (exp -> exp SUBTRACT exp .)
    LOOP            reduce using rule 35 (exp -> exp SUBTRACT exp .)
    OF              reduce using rule 35 (exp -> exp SUBTRACT exp .)
    RBRACE          reduce using rule 35 (exp -> exp SUBTRACT exp .)
    RPAREN          reduce using rule 35 (exp -> exp SUBTRACT exp .)
    ELSE            reduce using rule 35 (exp -> exp SUBTRACT exp .)
    POOL            reduce using rule 35 (exp -> exp SUBTRACT exp .)
    FI              reduce using rule 35 (exp -> exp SUBTRACT exp .)
    MULTIPLY        shift and go to state 62
    DIVIDE          shift and go to state 63
    LT              shift and go to state 64
    LE              shift and go to state 65
    EQUAL           shift and go to state 66

  ! MULTIPLY        [ reduce using rule 35 (exp -> exp SUBTRACT exp .) ]
  ! DIVIDE          [ reduce using rule 35 (exp -> exp SUBTRACT exp .) ]
  ! LT              [ reduce using rule 35 (exp -> exp SUBTRACT exp .) ]
  ! LE              [ reduce using rule 35 (exp -> exp SUBTRACT exp .) ]
  ! EQUAL           [ reduce using rule 35 (exp -> exp SUBTRACT exp .) ]
  ! DOT             [ shift and go to state 58 ]
  ! AT              [ shift and go to state 59 ]
  ! ADD             [ shift and go to state 60 ]
  ! SUBTRACT        [ shift and go to state 61 ]


state 88

    (36) exp -> exp MULTIPLY exp .
    (23) exp -> exp . DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> exp . DOT identifier LPAREN RPAREN
    (25) exp -> exp . AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> exp . AT type DOT identifier LPAREN RPAREN
    (34) exp -> exp . ADD exp
    (35) exp -> exp . SUBTRACT exp
    (36) exp -> exp . MULTIPLY exp
    (37) exp -> exp . DIVIDE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . LE exp
    (40) exp -> exp . EQUAL exp

    DOT             reduce using rule 36 (exp -> exp MULTIPLY exp .)
    AT              reduce using rule 36 (exp -> exp MULTIPLY exp .)
    ADD             reduce using rule 36 (exp -> exp MULTIPLY exp .)
    SUBTRACT        reduce using rule 36 (exp -> exp MULTIPLY exp .)
    MULTIPLY        reduce using rule 36 (exp -> exp MULTIPLY exp .)
    DIVIDE          reduce using rule 36 (exp -> exp MULTIPLY exp .)
    SEMI            reduce using rule 36 (exp -> exp MULTIPLY exp .)
    COMMA           reduce using rule 36 (exp -> exp MULTIPLY exp .)
    IN              reduce using rule 36 (exp -> exp MULTIPLY exp .)
    THEN            reduce using rule 36 (exp -> exp MULTIPLY exp .)
    LOOP            reduce using rule 36 (exp -> exp MULTIPLY exp .)
    OF              reduce using rule 36 (exp -> exp MULTIPLY exp .)
    RBRACE          reduce using rule 36 (exp -> exp MULTIPLY exp .)
    RPAREN          reduce using rule 36 (exp -> exp MULTIPLY exp .)
    ELSE            reduce using rule 36 (exp -> exp MULTIPLY exp .)
    POOL            reduce using rule 36 (exp -> exp MULTIPLY exp .)
    FI              reduce using rule 36 (exp -> exp MULTIPLY exp .)
    LT              shift and go to state 64
    LE              shift and go to state 65
    EQUAL           shift and go to state 66

  ! LT              [ reduce using rule 36 (exp -> exp MULTIPLY exp .) ]
  ! LE              [ reduce using rule 36 (exp -> exp MULTIPLY exp .) ]
  ! EQUAL           [ reduce using rule 36 (exp -> exp MULTIPLY exp .) ]
  ! DOT             [ shift and go to state 58 ]
  ! AT              [ shift and go to state 59 ]
  ! ADD             [ shift and go to state 60 ]
  ! SUBTRACT        [ shift and go to state 61 ]
  ! MULTIPLY        [ shift and go to state 62 ]
  ! DIVIDE          [ shift and go to state 63 ]


state 89

    (37) exp -> exp DIVIDE exp .
    (23) exp -> exp . DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> exp . DOT identifier LPAREN RPAREN
    (25) exp -> exp . AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> exp . AT type DOT identifier LPAREN RPAREN
    (34) exp -> exp . ADD exp
    (35) exp -> exp . SUBTRACT exp
    (36) exp -> exp . MULTIPLY exp
    (37) exp -> exp . DIVIDE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . LE exp
    (40) exp -> exp . EQUAL exp

    DOT             reduce using rule 37 (exp -> exp DIVIDE exp .)
    AT              reduce using rule 37 (exp -> exp DIVIDE exp .)
    ADD             reduce using rule 37 (exp -> exp DIVIDE exp .)
    SUBTRACT        reduce using rule 37 (exp -> exp DIVIDE exp .)
    MULTIPLY        reduce using rule 37 (exp -> exp DIVIDE exp .)
    DIVIDE          reduce using rule 37 (exp -> exp DIVIDE exp .)
    SEMI            reduce using rule 37 (exp -> exp DIVIDE exp .)
    COMMA           reduce using rule 37 (exp -> exp DIVIDE exp .)
    IN              reduce using rule 37 (exp -> exp DIVIDE exp .)
    THEN            reduce using rule 37 (exp -> exp DIVIDE exp .)
    LOOP            reduce using rule 37 (exp -> exp DIVIDE exp .)
    OF              reduce using rule 37 (exp -> exp DIVIDE exp .)
    RBRACE          reduce using rule 37 (exp -> exp DIVIDE exp .)
    RPAREN          reduce using rule 37 (exp -> exp DIVIDE exp .)
    ELSE            reduce using rule 37 (exp -> exp DIVIDE exp .)
    POOL            reduce using rule 37 (exp -> exp DIVIDE exp .)
    FI              reduce using rule 37 (exp -> exp DIVIDE exp .)
    LT              shift and go to state 64
    LE              shift and go to state 65
    EQUAL           shift and go to state 66

  ! LT              [ reduce using rule 37 (exp -> exp DIVIDE exp .) ]
  ! LE              [ reduce using rule 37 (exp -> exp DIVIDE exp .) ]
  ! EQUAL           [ reduce using rule 37 (exp -> exp DIVIDE exp .) ]
  ! DOT             [ shift and go to state 58 ]
  ! AT              [ shift and go to state 59 ]
  ! ADD             [ shift and go to state 60 ]
  ! SUBTRACT        [ shift and go to state 61 ]
  ! MULTIPLY        [ shift and go to state 62 ]
  ! DIVIDE          [ shift and go to state 63 ]


state 90

    (38) exp -> exp LT exp .
    (23) exp -> exp . DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> exp . DOT identifier LPAREN RPAREN
    (25) exp -> exp . AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> exp . AT type DOT identifier LPAREN RPAREN
    (34) exp -> exp . ADD exp
    (35) exp -> exp . SUBTRACT exp
    (36) exp -> exp . MULTIPLY exp
    (37) exp -> exp . DIVIDE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . LE exp
    (40) exp -> exp . EQUAL exp

    DOT             reduce using rule 38 (exp -> exp LT exp .)
    AT              reduce using rule 38 (exp -> exp LT exp .)
    ADD             reduce using rule 38 (exp -> exp LT exp .)
    SUBTRACT        reduce using rule 38 (exp -> exp LT exp .)
    MULTIPLY        reduce using rule 38 (exp -> exp LT exp .)
    DIVIDE          reduce using rule 38 (exp -> exp LT exp .)
    LT              reduce using rule 38 (exp -> exp LT exp .)
    LE              reduce using rule 38 (exp -> exp LT exp .)
    EQUAL           reduce using rule 38 (exp -> exp LT exp .)
    SEMI            reduce using rule 38 (exp -> exp LT exp .)
    COMMA           reduce using rule 38 (exp -> exp LT exp .)
    IN              reduce using rule 38 (exp -> exp LT exp .)
    THEN            reduce using rule 38 (exp -> exp LT exp .)
    LOOP            reduce using rule 38 (exp -> exp LT exp .)
    OF              reduce using rule 38 (exp -> exp LT exp .)
    RBRACE          reduce using rule 38 (exp -> exp LT exp .)
    RPAREN          reduce using rule 38 (exp -> exp LT exp .)
    ELSE            reduce using rule 38 (exp -> exp LT exp .)
    POOL            reduce using rule 38 (exp -> exp LT exp .)
    FI              reduce using rule 38 (exp -> exp LT exp .)

  ! DOT             [ shift and go to state 58 ]
  ! AT              [ shift and go to state 59 ]
  ! ADD             [ shift and go to state 60 ]
  ! SUBTRACT        [ shift and go to state 61 ]
  ! MULTIPLY        [ shift and go to state 62 ]
  ! DIVIDE          [ shift and go to state 63 ]
  ! LT              [ shift and go to state 64 ]
  ! LE              [ shift and go to state 65 ]
  ! EQUAL           [ shift and go to state 66 ]


state 91

    (39) exp -> exp LE exp .
    (23) exp -> exp . DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> exp . DOT identifier LPAREN RPAREN
    (25) exp -> exp . AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> exp . AT type DOT identifier LPAREN RPAREN
    (34) exp -> exp . ADD exp
    (35) exp -> exp . SUBTRACT exp
    (36) exp -> exp . MULTIPLY exp
    (37) exp -> exp . DIVIDE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . LE exp
    (40) exp -> exp . EQUAL exp

    DOT             reduce using rule 39 (exp -> exp LE exp .)
    AT              reduce using rule 39 (exp -> exp LE exp .)
    ADD             reduce using rule 39 (exp -> exp LE exp .)
    SUBTRACT        reduce using rule 39 (exp -> exp LE exp .)
    MULTIPLY        reduce using rule 39 (exp -> exp LE exp .)
    DIVIDE          reduce using rule 39 (exp -> exp LE exp .)
    LT              reduce using rule 39 (exp -> exp LE exp .)
    LE              reduce using rule 39 (exp -> exp LE exp .)
    EQUAL           reduce using rule 39 (exp -> exp LE exp .)
    SEMI            reduce using rule 39 (exp -> exp LE exp .)
    COMMA           reduce using rule 39 (exp -> exp LE exp .)
    IN              reduce using rule 39 (exp -> exp LE exp .)
    THEN            reduce using rule 39 (exp -> exp LE exp .)
    LOOP            reduce using rule 39 (exp -> exp LE exp .)
    OF              reduce using rule 39 (exp -> exp LE exp .)
    RBRACE          reduce using rule 39 (exp -> exp LE exp .)
    RPAREN          reduce using rule 39 (exp -> exp LE exp .)
    ELSE            reduce using rule 39 (exp -> exp LE exp .)
    POOL            reduce using rule 39 (exp -> exp LE exp .)
    FI              reduce using rule 39 (exp -> exp LE exp .)

  ! DOT             [ shift and go to state 58 ]
  ! AT              [ shift and go to state 59 ]
  ! ADD             [ shift and go to state 60 ]
  ! SUBTRACT        [ shift and go to state 61 ]
  ! MULTIPLY        [ shift and go to state 62 ]
  ! DIVIDE          [ shift and go to state 63 ]
  ! LT              [ shift and go to state 64 ]
  ! LE              [ shift and go to state 65 ]
  ! EQUAL           [ shift and go to state 66 ]


state 92

    (40) exp -> exp EQUAL exp .
    (23) exp -> exp . DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> exp . DOT identifier LPAREN RPAREN
    (25) exp -> exp . AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> exp . AT type DOT identifier LPAREN RPAREN
    (34) exp -> exp . ADD exp
    (35) exp -> exp . SUBTRACT exp
    (36) exp -> exp . MULTIPLY exp
    (37) exp -> exp . DIVIDE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . LE exp
    (40) exp -> exp . EQUAL exp

    DOT             reduce using rule 40 (exp -> exp EQUAL exp .)
    AT              reduce using rule 40 (exp -> exp EQUAL exp .)
    ADD             reduce using rule 40 (exp -> exp EQUAL exp .)
    SUBTRACT        reduce using rule 40 (exp -> exp EQUAL exp .)
    MULTIPLY        reduce using rule 40 (exp -> exp EQUAL exp .)
    DIVIDE          reduce using rule 40 (exp -> exp EQUAL exp .)
    LT              reduce using rule 40 (exp -> exp EQUAL exp .)
    LE              reduce using rule 40 (exp -> exp EQUAL exp .)
    EQUAL           reduce using rule 40 (exp -> exp EQUAL exp .)
    SEMI            reduce using rule 40 (exp -> exp EQUAL exp .)
    COMMA           reduce using rule 40 (exp -> exp EQUAL exp .)
    IN              reduce using rule 40 (exp -> exp EQUAL exp .)
    THEN            reduce using rule 40 (exp -> exp EQUAL exp .)
    LOOP            reduce using rule 40 (exp -> exp EQUAL exp .)
    OF              reduce using rule 40 (exp -> exp EQUAL exp .)
    RBRACE          reduce using rule 40 (exp -> exp EQUAL exp .)
    RPAREN          reduce using rule 40 (exp -> exp EQUAL exp .)
    ELSE            reduce using rule 40 (exp -> exp EQUAL exp .)
    POOL            reduce using rule 40 (exp -> exp EQUAL exp .)
    FI              reduce using rule 40 (exp -> exp EQUAL exp .)

  ! DOT             [ shift and go to state 58 ]
  ! AT              [ shift and go to state 59 ]
  ! ADD             [ shift and go to state 60 ]
  ! SUBTRACT        [ shift and go to state 61 ]
  ! MULTIPLY        [ shift and go to state 62 ]
  ! DIVIDE          [ shift and go to state 63 ]
  ! LT              [ shift and go to state 64 ]
  ! LE              [ shift and go to state 65 ]
  ! EQUAL           [ shift and go to state 66 ]


state 93

    (29) exp -> IF exp THEN . exp ELSE exp FI
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    exp                            shift and go to state 106
    identifier                     shift and go to state 39

state 94

    (30) exp -> WHILE exp LOOP . exp POOL
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    exp                            shift and go to state 107
    identifier                     shift and go to state 39

state 95

    (31) exp -> LBRACE explist_semi RBRACE .

    DOT             reduce using rule 31 (exp -> LBRACE explist_semi RBRACE .)
    AT              reduce using rule 31 (exp -> LBRACE explist_semi RBRACE .)
    ADD             reduce using rule 31 (exp -> LBRACE explist_semi RBRACE .)
    SUBTRACT        reduce using rule 31 (exp -> LBRACE explist_semi RBRACE .)
    MULTIPLY        reduce using rule 31 (exp -> LBRACE explist_semi RBRACE .)
    DIVIDE          reduce using rule 31 (exp -> LBRACE explist_semi RBRACE .)
    LT              reduce using rule 31 (exp -> LBRACE explist_semi RBRACE .)
    LE              reduce using rule 31 (exp -> LBRACE explist_semi RBRACE .)
    EQUAL           reduce using rule 31 (exp -> LBRACE explist_semi RBRACE .)
    SEMI            reduce using rule 31 (exp -> LBRACE explist_semi RBRACE .)
    COMMA           reduce using rule 31 (exp -> LBRACE explist_semi RBRACE .)
    IN              reduce using rule 31 (exp -> LBRACE explist_semi RBRACE .)
    THEN            reduce using rule 31 (exp -> LBRACE explist_semi RBRACE .)
    LOOP            reduce using rule 31 (exp -> LBRACE explist_semi RBRACE .)
    OF              reduce using rule 31 (exp -> LBRACE explist_semi RBRACE .)
    RBRACE          reduce using rule 31 (exp -> LBRACE explist_semi RBRACE .)
    RPAREN          reduce using rule 31 (exp -> LBRACE explist_semi RBRACE .)
    ELSE            reduce using rule 31 (exp -> LBRACE explist_semi RBRACE .)
    POOL            reduce using rule 31 (exp -> LBRACE explist_semi RBRACE .)
    FI              reduce using rule 31 (exp -> LBRACE explist_semi RBRACE .)


state 96

    (18) explist_semi -> exp SEMI .
    (19) explist_semi -> exp SEMI . explist_semi
    (18) explist_semi -> . exp SEMI
    (19) explist_semi -> . exp SEMI explist_semi
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    RBRACE          reduce using rule 18 (explist_semi -> exp SEMI .)
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    exp                            shift and go to state 70
    explist_semi                   shift and go to state 108
    identifier                     shift and go to state 39

state 97

    (48) exp -> LET attribute attributelist . IN exp

    IN              shift and go to state 109


state 98

    (50) attributelist -> COMMA . attribute attributelist
    (14) attribute -> . identifier COLON type
    (15) attribute -> . identifier COLON type LARROW exp
    (7) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 15

    attribute                      shift and go to state 110
    identifier                     shift and go to state 76

state 99

    (51) exp -> CASE exp OF . elementlist ESAC
    (53) elementlist -> . element SEMI
    (54) elementlist -> . element SEMI elementlist
    (52) element -> . identifier COLON type RARROW exp
    (7) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 15

    elementlist                    shift and go to state 111
    element                        shift and go to state 112
    identifier                     shift and go to state 113

state 100

    (16) feature -> identifier LPAREN formallist RPAREN COLON type LBRACE exp . RBRACE
    (23) exp -> exp . DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> exp . DOT identifier LPAREN RPAREN
    (25) exp -> exp . AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> exp . AT type DOT identifier LPAREN RPAREN
    (34) exp -> exp . ADD exp
    (35) exp -> exp . SUBTRACT exp
    (36) exp -> exp . MULTIPLY exp
    (37) exp -> exp . DIVIDE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . LE exp
    (40) exp -> exp . EQUAL exp

    RBRACE          shift and go to state 114
    DOT             shift and go to state 58
    AT              shift and go to state 59
    ADD             shift and go to state 60
    SUBTRACT        shift and go to state 61
    MULTIPLY        shift and go to state 62
    DIVIDE          shift and go to state 63
    LT              shift and go to state 64
    LE              shift and go to state 65
    EQUAL           shift and go to state 66


state 101

    (17) feature -> identifier LPAREN RPAREN COLON type LBRACE exp RBRACE .

    SEMI            reduce using rule 17 (feature -> identifier LPAREN RPAREN COLON type LBRACE exp RBRACE .)


state 102

    (27) exp -> identifier LPAREN explist_comma RPAREN .

    DOT             reduce using rule 27 (exp -> identifier LPAREN explist_comma RPAREN .)
    AT              reduce using rule 27 (exp -> identifier LPAREN explist_comma RPAREN .)
    ADD             reduce using rule 27 (exp -> identifier LPAREN explist_comma RPAREN .)
    SUBTRACT        reduce using rule 27 (exp -> identifier LPAREN explist_comma RPAREN .)
    MULTIPLY        reduce using rule 27 (exp -> identifier LPAREN explist_comma RPAREN .)
    DIVIDE          reduce using rule 27 (exp -> identifier LPAREN explist_comma RPAREN .)
    LT              reduce using rule 27 (exp -> identifier LPAREN explist_comma RPAREN .)
    LE              reduce using rule 27 (exp -> identifier LPAREN explist_comma RPAREN .)
    EQUAL           reduce using rule 27 (exp -> identifier LPAREN explist_comma RPAREN .)
    SEMI            reduce using rule 27 (exp -> identifier LPAREN explist_comma RPAREN .)
    COMMA           reduce using rule 27 (exp -> identifier LPAREN explist_comma RPAREN .)
    IN              reduce using rule 27 (exp -> identifier LPAREN explist_comma RPAREN .)
    THEN            reduce using rule 27 (exp -> identifier LPAREN explist_comma RPAREN .)
    LOOP            reduce using rule 27 (exp -> identifier LPAREN explist_comma RPAREN .)
    OF              reduce using rule 27 (exp -> identifier LPAREN explist_comma RPAREN .)
    RBRACE          reduce using rule 27 (exp -> identifier LPAREN explist_comma RPAREN .)
    RPAREN          reduce using rule 27 (exp -> identifier LPAREN explist_comma RPAREN .)
    ELSE            reduce using rule 27 (exp -> identifier LPAREN explist_comma RPAREN .)
    POOL            reduce using rule 27 (exp -> identifier LPAREN explist_comma RPAREN .)
    FI              reduce using rule 27 (exp -> identifier LPAREN explist_comma RPAREN .)


state 103

    (21) explist_comma -> exp COMMA . explist_comma
    (20) explist_comma -> . exp
    (21) explist_comma -> . exp COMMA explist_comma
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    exp                            shift and go to state 83
    explist_comma                  shift and go to state 115
    identifier                     shift and go to state 39

state 104

    (23) exp -> exp DOT identifier LPAREN . explist_comma RPAREN
    (24) exp -> exp DOT identifier LPAREN . RPAREN
    (20) explist_comma -> . exp
    (21) explist_comma -> . exp COMMA explist_comma
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    RPAREN          shift and go to state 117
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    exp                            shift and go to state 83
    identifier                     shift and go to state 39
    explist_comma                  shift and go to state 116

state 105

    (25) exp -> exp AT type DOT . identifier LPAREN explist_comma RPAREN
    (26) exp -> exp AT type DOT . identifier LPAREN RPAREN
    (7) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 15

    identifier                     shift and go to state 118

state 106

    (29) exp -> IF exp THEN exp . ELSE exp FI
    (23) exp -> exp . DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> exp . DOT identifier LPAREN RPAREN
    (25) exp -> exp . AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> exp . AT type DOT identifier LPAREN RPAREN
    (34) exp -> exp . ADD exp
    (35) exp -> exp . SUBTRACT exp
    (36) exp -> exp . MULTIPLY exp
    (37) exp -> exp . DIVIDE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . LE exp
    (40) exp -> exp . EQUAL exp

    ELSE            shift and go to state 119
    DOT             shift and go to state 58
    AT              shift and go to state 59
    ADD             shift and go to state 60
    SUBTRACT        shift and go to state 61
    MULTIPLY        shift and go to state 62
    DIVIDE          shift and go to state 63
    LT              shift and go to state 64
    LE              shift and go to state 65
    EQUAL           shift and go to state 66


state 107

    (30) exp -> WHILE exp LOOP exp . POOL
    (23) exp -> exp . DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> exp . DOT identifier LPAREN RPAREN
    (25) exp -> exp . AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> exp . AT type DOT identifier LPAREN RPAREN
    (34) exp -> exp . ADD exp
    (35) exp -> exp . SUBTRACT exp
    (36) exp -> exp . MULTIPLY exp
    (37) exp -> exp . DIVIDE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . LE exp
    (40) exp -> exp . EQUAL exp

    POOL            shift and go to state 120
    DOT             shift and go to state 58
    AT              shift and go to state 59
    ADD             shift and go to state 60
    SUBTRACT        shift and go to state 61
    MULTIPLY        shift and go to state 62
    DIVIDE          shift and go to state 63
    LT              shift and go to state 64
    LE              shift and go to state 65
    EQUAL           shift and go to state 66


state 108

    (19) explist_semi -> exp SEMI explist_semi .

    RBRACE          reduce using rule 19 (explist_semi -> exp SEMI explist_semi .)


state 109

    (48) exp -> LET attribute attributelist IN . exp
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    exp                            shift and go to state 121
    identifier                     shift and go to state 39

state 110

    (50) attributelist -> COMMA attribute . attributelist
    (49) attributelist -> .
    (50) attributelist -> . COMMA attribute attributelist

    IN              reduce using rule 49 (attributelist -> .)
    COMMA           shift and go to state 98

    attributelist                  shift and go to state 122

state 111

    (51) exp -> CASE exp OF elementlist . ESAC

    ESAC            shift and go to state 123


state 112

    (53) elementlist -> element . SEMI
    (54) elementlist -> element . SEMI elementlist

    SEMI            shift and go to state 124


state 113

    (52) element -> identifier . COLON type RARROW exp

    COLON           shift and go to state 125


state 114

    (16) feature -> identifier LPAREN formallist RPAREN COLON type LBRACE exp RBRACE .

    SEMI            reduce using rule 16 (feature -> identifier LPAREN formallist RPAREN COLON type LBRACE exp RBRACE .)


state 115

    (21) explist_comma -> exp COMMA explist_comma .

    RPAREN          reduce using rule 21 (explist_comma -> exp COMMA explist_comma .)


state 116

    (23) exp -> exp DOT identifier LPAREN explist_comma . RPAREN

    RPAREN          shift and go to state 126


state 117

    (24) exp -> exp DOT identifier LPAREN RPAREN .

    DOT             reduce using rule 24 (exp -> exp DOT identifier LPAREN RPAREN .)
    AT              reduce using rule 24 (exp -> exp DOT identifier LPAREN RPAREN .)
    ADD             reduce using rule 24 (exp -> exp DOT identifier LPAREN RPAREN .)
    SUBTRACT        reduce using rule 24 (exp -> exp DOT identifier LPAREN RPAREN .)
    MULTIPLY        reduce using rule 24 (exp -> exp DOT identifier LPAREN RPAREN .)
    DIVIDE          reduce using rule 24 (exp -> exp DOT identifier LPAREN RPAREN .)
    LT              reduce using rule 24 (exp -> exp DOT identifier LPAREN RPAREN .)
    LE              reduce using rule 24 (exp -> exp DOT identifier LPAREN RPAREN .)
    EQUAL           reduce using rule 24 (exp -> exp DOT identifier LPAREN RPAREN .)
    SEMI            reduce using rule 24 (exp -> exp DOT identifier LPAREN RPAREN .)
    COMMA           reduce using rule 24 (exp -> exp DOT identifier LPAREN RPAREN .)
    IN              reduce using rule 24 (exp -> exp DOT identifier LPAREN RPAREN .)
    THEN            reduce using rule 24 (exp -> exp DOT identifier LPAREN RPAREN .)
    LOOP            reduce using rule 24 (exp -> exp DOT identifier LPAREN RPAREN .)
    OF              reduce using rule 24 (exp -> exp DOT identifier LPAREN RPAREN .)
    RBRACE          reduce using rule 24 (exp -> exp DOT identifier LPAREN RPAREN .)
    RPAREN          reduce using rule 24 (exp -> exp DOT identifier LPAREN RPAREN .)
    ELSE            reduce using rule 24 (exp -> exp DOT identifier LPAREN RPAREN .)
    POOL            reduce using rule 24 (exp -> exp DOT identifier LPAREN RPAREN .)
    FI              reduce using rule 24 (exp -> exp DOT identifier LPAREN RPAREN .)


state 118

    (25) exp -> exp AT type DOT identifier . LPAREN explist_comma RPAREN
    (26) exp -> exp AT type DOT identifier . LPAREN RPAREN

    LPAREN          shift and go to state 127


state 119

    (29) exp -> IF exp THEN exp ELSE . exp FI
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    exp                            shift and go to state 128
    identifier                     shift and go to state 39

state 120

    (30) exp -> WHILE exp LOOP exp POOL .

    DOT             reduce using rule 30 (exp -> WHILE exp LOOP exp POOL .)
    AT              reduce using rule 30 (exp -> WHILE exp LOOP exp POOL .)
    ADD             reduce using rule 30 (exp -> WHILE exp LOOP exp POOL .)
    SUBTRACT        reduce using rule 30 (exp -> WHILE exp LOOP exp POOL .)
    MULTIPLY        reduce using rule 30 (exp -> WHILE exp LOOP exp POOL .)
    DIVIDE          reduce using rule 30 (exp -> WHILE exp LOOP exp POOL .)
    LT              reduce using rule 30 (exp -> WHILE exp LOOP exp POOL .)
    LE              reduce using rule 30 (exp -> WHILE exp LOOP exp POOL .)
    EQUAL           reduce using rule 30 (exp -> WHILE exp LOOP exp POOL .)
    SEMI            reduce using rule 30 (exp -> WHILE exp LOOP exp POOL .)
    COMMA           reduce using rule 30 (exp -> WHILE exp LOOP exp POOL .)
    IN              reduce using rule 30 (exp -> WHILE exp LOOP exp POOL .)
    THEN            reduce using rule 30 (exp -> WHILE exp LOOP exp POOL .)
    LOOP            reduce using rule 30 (exp -> WHILE exp LOOP exp POOL .)
    OF              reduce using rule 30 (exp -> WHILE exp LOOP exp POOL .)
    RBRACE          reduce using rule 30 (exp -> WHILE exp LOOP exp POOL .)
    RPAREN          reduce using rule 30 (exp -> WHILE exp LOOP exp POOL .)
    ELSE            reduce using rule 30 (exp -> WHILE exp LOOP exp POOL .)
    POOL            reduce using rule 30 (exp -> WHILE exp LOOP exp POOL .)
    FI              reduce using rule 30 (exp -> WHILE exp LOOP exp POOL .)


state 121

    (48) exp -> LET attribute attributelist IN exp .
    (23) exp -> exp . DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> exp . DOT identifier LPAREN RPAREN
    (25) exp -> exp . AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> exp . AT type DOT identifier LPAREN RPAREN
    (34) exp -> exp . ADD exp
    (35) exp -> exp . SUBTRACT exp
    (36) exp -> exp . MULTIPLY exp
    (37) exp -> exp . DIVIDE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . LE exp
    (40) exp -> exp . EQUAL exp

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for AT resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUBTRACT resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    SEMI            reduce using rule 48 (exp -> LET attribute attributelist IN exp .)
    COMMA           reduce using rule 48 (exp -> LET attribute attributelist IN exp .)
    IN              reduce using rule 48 (exp -> LET attribute attributelist IN exp .)
    THEN            reduce using rule 48 (exp -> LET attribute attributelist IN exp .)
    LOOP            reduce using rule 48 (exp -> LET attribute attributelist IN exp .)
    OF              reduce using rule 48 (exp -> LET attribute attributelist IN exp .)
    RBRACE          reduce using rule 48 (exp -> LET attribute attributelist IN exp .)
    RPAREN          reduce using rule 48 (exp -> LET attribute attributelist IN exp .)
    ELSE            reduce using rule 48 (exp -> LET attribute attributelist IN exp .)
    POOL            reduce using rule 48 (exp -> LET attribute attributelist IN exp .)
    FI              reduce using rule 48 (exp -> LET attribute attributelist IN exp .)
    DOT             shift and go to state 58
    AT              shift and go to state 59
    ADD             shift and go to state 60
    SUBTRACT        shift and go to state 61
    MULTIPLY        shift and go to state 62
    DIVIDE          shift and go to state 63
    LT              shift and go to state 64
    LE              shift and go to state 65
    EQUAL           shift and go to state 66

  ! DOT             [ reduce using rule 48 (exp -> LET attribute attributelist IN exp .) ]
  ! AT              [ reduce using rule 48 (exp -> LET attribute attributelist IN exp .) ]
  ! ADD             [ reduce using rule 48 (exp -> LET attribute attributelist IN exp .) ]
  ! SUBTRACT        [ reduce using rule 48 (exp -> LET attribute attributelist IN exp .) ]
  ! MULTIPLY        [ reduce using rule 48 (exp -> LET attribute attributelist IN exp .) ]
  ! DIVIDE          [ reduce using rule 48 (exp -> LET attribute attributelist IN exp .) ]
  ! LT              [ reduce using rule 48 (exp -> LET attribute attributelist IN exp .) ]
  ! LE              [ reduce using rule 48 (exp -> LET attribute attributelist IN exp .) ]
  ! EQUAL           [ reduce using rule 48 (exp -> LET attribute attributelist IN exp .) ]


state 122

    (50) attributelist -> COMMA attribute attributelist .

    IN              reduce using rule 50 (attributelist -> COMMA attribute attributelist .)


state 123

    (51) exp -> CASE exp OF elementlist ESAC .

    DOT             reduce using rule 51 (exp -> CASE exp OF elementlist ESAC .)
    AT              reduce using rule 51 (exp -> CASE exp OF elementlist ESAC .)
    ADD             reduce using rule 51 (exp -> CASE exp OF elementlist ESAC .)
    SUBTRACT        reduce using rule 51 (exp -> CASE exp OF elementlist ESAC .)
    MULTIPLY        reduce using rule 51 (exp -> CASE exp OF elementlist ESAC .)
    DIVIDE          reduce using rule 51 (exp -> CASE exp OF elementlist ESAC .)
    LT              reduce using rule 51 (exp -> CASE exp OF elementlist ESAC .)
    LE              reduce using rule 51 (exp -> CASE exp OF elementlist ESAC .)
    EQUAL           reduce using rule 51 (exp -> CASE exp OF elementlist ESAC .)
    SEMI            reduce using rule 51 (exp -> CASE exp OF elementlist ESAC .)
    COMMA           reduce using rule 51 (exp -> CASE exp OF elementlist ESAC .)
    IN              reduce using rule 51 (exp -> CASE exp OF elementlist ESAC .)
    THEN            reduce using rule 51 (exp -> CASE exp OF elementlist ESAC .)
    LOOP            reduce using rule 51 (exp -> CASE exp OF elementlist ESAC .)
    OF              reduce using rule 51 (exp -> CASE exp OF elementlist ESAC .)
    RBRACE          reduce using rule 51 (exp -> CASE exp OF elementlist ESAC .)
    RPAREN          reduce using rule 51 (exp -> CASE exp OF elementlist ESAC .)
    ELSE            reduce using rule 51 (exp -> CASE exp OF elementlist ESAC .)
    POOL            reduce using rule 51 (exp -> CASE exp OF elementlist ESAC .)
    FI              reduce using rule 51 (exp -> CASE exp OF elementlist ESAC .)


state 124

    (53) elementlist -> element SEMI .
    (54) elementlist -> element SEMI . elementlist
    (53) elementlist -> . element SEMI
    (54) elementlist -> . element SEMI elementlist
    (52) element -> . identifier COLON type RARROW exp
    (7) identifier -> . IDENTIFIER

    ESAC            reduce using rule 53 (elementlist -> element SEMI .)
    IDENTIFIER      shift and go to state 15

    element                        shift and go to state 112
    elementlist                    shift and go to state 129
    identifier                     shift and go to state 113

state 125

    (52) element -> identifier COLON . type RARROW exp
    (6) type -> . TYPE

    TYPE            shift and go to state 7

    type                           shift and go to state 130

state 126

    (23) exp -> exp DOT identifier LPAREN explist_comma RPAREN .

    DOT             reduce using rule 23 (exp -> exp DOT identifier LPAREN explist_comma RPAREN .)
    AT              reduce using rule 23 (exp -> exp DOT identifier LPAREN explist_comma RPAREN .)
    ADD             reduce using rule 23 (exp -> exp DOT identifier LPAREN explist_comma RPAREN .)
    SUBTRACT        reduce using rule 23 (exp -> exp DOT identifier LPAREN explist_comma RPAREN .)
    MULTIPLY        reduce using rule 23 (exp -> exp DOT identifier LPAREN explist_comma RPAREN .)
    DIVIDE          reduce using rule 23 (exp -> exp DOT identifier LPAREN explist_comma RPAREN .)
    LT              reduce using rule 23 (exp -> exp DOT identifier LPAREN explist_comma RPAREN .)
    LE              reduce using rule 23 (exp -> exp DOT identifier LPAREN explist_comma RPAREN .)
    EQUAL           reduce using rule 23 (exp -> exp DOT identifier LPAREN explist_comma RPAREN .)
    SEMI            reduce using rule 23 (exp -> exp DOT identifier LPAREN explist_comma RPAREN .)
    COMMA           reduce using rule 23 (exp -> exp DOT identifier LPAREN explist_comma RPAREN .)
    IN              reduce using rule 23 (exp -> exp DOT identifier LPAREN explist_comma RPAREN .)
    THEN            reduce using rule 23 (exp -> exp DOT identifier LPAREN explist_comma RPAREN .)
    LOOP            reduce using rule 23 (exp -> exp DOT identifier LPAREN explist_comma RPAREN .)
    OF              reduce using rule 23 (exp -> exp DOT identifier LPAREN explist_comma RPAREN .)
    RBRACE          reduce using rule 23 (exp -> exp DOT identifier LPAREN explist_comma RPAREN .)
    RPAREN          reduce using rule 23 (exp -> exp DOT identifier LPAREN explist_comma RPAREN .)
    ELSE            reduce using rule 23 (exp -> exp DOT identifier LPAREN explist_comma RPAREN .)
    POOL            reduce using rule 23 (exp -> exp DOT identifier LPAREN explist_comma RPAREN .)
    FI              reduce using rule 23 (exp -> exp DOT identifier LPAREN explist_comma RPAREN .)


state 127

    (25) exp -> exp AT type DOT identifier LPAREN . explist_comma RPAREN
    (26) exp -> exp AT type DOT identifier LPAREN . RPAREN
    (20) explist_comma -> . exp
    (21) explist_comma -> . exp COMMA explist_comma
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    RPAREN          shift and go to state 132
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    exp                            shift and go to state 83
    identifier                     shift and go to state 39
    explist_comma                  shift and go to state 131

state 128

    (29) exp -> IF exp THEN exp ELSE exp . FI
    (23) exp -> exp . DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> exp . DOT identifier LPAREN RPAREN
    (25) exp -> exp . AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> exp . AT type DOT identifier LPAREN RPAREN
    (34) exp -> exp . ADD exp
    (35) exp -> exp . SUBTRACT exp
    (36) exp -> exp . MULTIPLY exp
    (37) exp -> exp . DIVIDE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . LE exp
    (40) exp -> exp . EQUAL exp

    FI              shift and go to state 133
    DOT             shift and go to state 58
    AT              shift and go to state 59
    ADD             shift and go to state 60
    SUBTRACT        shift and go to state 61
    MULTIPLY        shift and go to state 62
    DIVIDE          shift and go to state 63
    LT              shift and go to state 64
    LE              shift and go to state 65
    EQUAL           shift and go to state 66


state 129

    (54) elementlist -> element SEMI elementlist .

    ESAC            reduce using rule 54 (elementlist -> element SEMI elementlist .)


state 130

    (52) element -> identifier COLON type . RARROW exp

    RARROW          shift and go to state 134


state 131

    (25) exp -> exp AT type DOT identifier LPAREN explist_comma . RPAREN

    RPAREN          shift and go to state 135


state 132

    (26) exp -> exp AT type DOT identifier LPAREN RPAREN .

    DOT             reduce using rule 26 (exp -> exp AT type DOT identifier LPAREN RPAREN .)
    AT              reduce using rule 26 (exp -> exp AT type DOT identifier LPAREN RPAREN .)
    ADD             reduce using rule 26 (exp -> exp AT type DOT identifier LPAREN RPAREN .)
    SUBTRACT        reduce using rule 26 (exp -> exp AT type DOT identifier LPAREN RPAREN .)
    MULTIPLY        reduce using rule 26 (exp -> exp AT type DOT identifier LPAREN RPAREN .)
    DIVIDE          reduce using rule 26 (exp -> exp AT type DOT identifier LPAREN RPAREN .)
    LT              reduce using rule 26 (exp -> exp AT type DOT identifier LPAREN RPAREN .)
    LE              reduce using rule 26 (exp -> exp AT type DOT identifier LPAREN RPAREN .)
    EQUAL           reduce using rule 26 (exp -> exp AT type DOT identifier LPAREN RPAREN .)
    SEMI            reduce using rule 26 (exp -> exp AT type DOT identifier LPAREN RPAREN .)
    COMMA           reduce using rule 26 (exp -> exp AT type DOT identifier LPAREN RPAREN .)
    IN              reduce using rule 26 (exp -> exp AT type DOT identifier LPAREN RPAREN .)
    THEN            reduce using rule 26 (exp -> exp AT type DOT identifier LPAREN RPAREN .)
    LOOP            reduce using rule 26 (exp -> exp AT type DOT identifier LPAREN RPAREN .)
    OF              reduce using rule 26 (exp -> exp AT type DOT identifier LPAREN RPAREN .)
    RBRACE          reduce using rule 26 (exp -> exp AT type DOT identifier LPAREN RPAREN .)
    RPAREN          reduce using rule 26 (exp -> exp AT type DOT identifier LPAREN RPAREN .)
    ELSE            reduce using rule 26 (exp -> exp AT type DOT identifier LPAREN RPAREN .)
    POOL            reduce using rule 26 (exp -> exp AT type DOT identifier LPAREN RPAREN .)
    FI              reduce using rule 26 (exp -> exp AT type DOT identifier LPAREN RPAREN .)


state 133

    (29) exp -> IF exp THEN exp ELSE exp FI .

    DOT             reduce using rule 29 (exp -> IF exp THEN exp ELSE exp FI .)
    AT              reduce using rule 29 (exp -> IF exp THEN exp ELSE exp FI .)
    ADD             reduce using rule 29 (exp -> IF exp THEN exp ELSE exp FI .)
    SUBTRACT        reduce using rule 29 (exp -> IF exp THEN exp ELSE exp FI .)
    MULTIPLY        reduce using rule 29 (exp -> IF exp THEN exp ELSE exp FI .)
    DIVIDE          reduce using rule 29 (exp -> IF exp THEN exp ELSE exp FI .)
    LT              reduce using rule 29 (exp -> IF exp THEN exp ELSE exp FI .)
    LE              reduce using rule 29 (exp -> IF exp THEN exp ELSE exp FI .)
    EQUAL           reduce using rule 29 (exp -> IF exp THEN exp ELSE exp FI .)
    SEMI            reduce using rule 29 (exp -> IF exp THEN exp ELSE exp FI .)
    COMMA           reduce using rule 29 (exp -> IF exp THEN exp ELSE exp FI .)
    IN              reduce using rule 29 (exp -> IF exp THEN exp ELSE exp FI .)
    THEN            reduce using rule 29 (exp -> IF exp THEN exp ELSE exp FI .)
    LOOP            reduce using rule 29 (exp -> IF exp THEN exp ELSE exp FI .)
    OF              reduce using rule 29 (exp -> IF exp THEN exp ELSE exp FI .)
    RBRACE          reduce using rule 29 (exp -> IF exp THEN exp ELSE exp FI .)
    RPAREN          reduce using rule 29 (exp -> IF exp THEN exp ELSE exp FI .)
    ELSE            reduce using rule 29 (exp -> IF exp THEN exp ELSE exp FI .)
    POOL            reduce using rule 29 (exp -> IF exp THEN exp ELSE exp FI .)
    FI              reduce using rule 29 (exp -> IF exp THEN exp ELSE exp FI .)


state 134

    (52) element -> identifier COLON type RARROW . exp
    (22) exp -> . identifier LARROW exp
    (23) exp -> . exp DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> . exp DOT identifier LPAREN RPAREN
    (25) exp -> . exp AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> . exp AT type DOT identifier LPAREN RPAREN
    (27) exp -> . identifier LPAREN explist_comma RPAREN
    (28) exp -> . identifier LPAREN RPAREN
    (29) exp -> . IF exp THEN exp ELSE exp FI
    (30) exp -> . WHILE exp LOOP exp POOL
    (31) exp -> . LBRACE explist_semi RBRACE
    (32) exp -> . NEW type
    (33) exp -> . ISVOID exp
    (34) exp -> . exp ADD exp
    (35) exp -> . exp SUBTRACT exp
    (36) exp -> . exp MULTIPLY exp
    (37) exp -> . exp DIVIDE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp LE exp
    (40) exp -> . exp EQUAL exp
    (41) exp -> . NOT exp
    (42) exp -> . TILDE exp
    (43) exp -> . identifier
    (44) exp -> . INTEGER
    (45) exp -> . STRING
    (46) exp -> . TRUE
    (47) exp -> . FALSE
    (48) exp -> . LET attribute attributelist IN exp
    (51) exp -> . CASE exp OF elementlist ESAC
    (7) identifier -> . IDENTIFIER

    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    NEW             shift and go to state 44
    ISVOID          shift and go to state 45
    NOT             shift and go to state 46
    TILDE           shift and go to state 47
    INTEGER         shift and go to state 48
    STRING          shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    LET             shift and go to state 52
    CASE            shift and go to state 53
    IDENTIFIER      shift and go to state 15

    identifier                     shift and go to state 39
    exp                            shift and go to state 136

state 135

    (25) exp -> exp AT type DOT identifier LPAREN explist_comma RPAREN .

    DOT             reduce using rule 25 (exp -> exp AT type DOT identifier LPAREN explist_comma RPAREN .)
    AT              reduce using rule 25 (exp -> exp AT type DOT identifier LPAREN explist_comma RPAREN .)
    ADD             reduce using rule 25 (exp -> exp AT type DOT identifier LPAREN explist_comma RPAREN .)
    SUBTRACT        reduce using rule 25 (exp -> exp AT type DOT identifier LPAREN explist_comma RPAREN .)
    MULTIPLY        reduce using rule 25 (exp -> exp AT type DOT identifier LPAREN explist_comma RPAREN .)
    DIVIDE          reduce using rule 25 (exp -> exp AT type DOT identifier LPAREN explist_comma RPAREN .)
    LT              reduce using rule 25 (exp -> exp AT type DOT identifier LPAREN explist_comma RPAREN .)
    LE              reduce using rule 25 (exp -> exp AT type DOT identifier LPAREN explist_comma RPAREN .)
    EQUAL           reduce using rule 25 (exp -> exp AT type DOT identifier LPAREN explist_comma RPAREN .)
    SEMI            reduce using rule 25 (exp -> exp AT type DOT identifier LPAREN explist_comma RPAREN .)
    COMMA           reduce using rule 25 (exp -> exp AT type DOT identifier LPAREN explist_comma RPAREN .)
    IN              reduce using rule 25 (exp -> exp AT type DOT identifier LPAREN explist_comma RPAREN .)
    THEN            reduce using rule 25 (exp -> exp AT type DOT identifier LPAREN explist_comma RPAREN .)
    LOOP            reduce using rule 25 (exp -> exp AT type DOT identifier LPAREN explist_comma RPAREN .)
    OF              reduce using rule 25 (exp -> exp AT type DOT identifier LPAREN explist_comma RPAREN .)
    RBRACE          reduce using rule 25 (exp -> exp AT type DOT identifier LPAREN explist_comma RPAREN .)
    RPAREN          reduce using rule 25 (exp -> exp AT type DOT identifier LPAREN explist_comma RPAREN .)
    ELSE            reduce using rule 25 (exp -> exp AT type DOT identifier LPAREN explist_comma RPAREN .)
    POOL            reduce using rule 25 (exp -> exp AT type DOT identifier LPAREN explist_comma RPAREN .)
    FI              reduce using rule 25 (exp -> exp AT type DOT identifier LPAREN explist_comma RPAREN .)


state 136

    (52) element -> identifier COLON type RARROW exp .
    (23) exp -> exp . DOT identifier LPAREN explist_comma RPAREN
    (24) exp -> exp . DOT identifier LPAREN RPAREN
    (25) exp -> exp . AT type DOT identifier LPAREN explist_comma RPAREN
    (26) exp -> exp . AT type DOT identifier LPAREN RPAREN
    (34) exp -> exp . ADD exp
    (35) exp -> exp . SUBTRACT exp
    (36) exp -> exp . MULTIPLY exp
    (37) exp -> exp . DIVIDE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . LE exp
    (40) exp -> exp . EQUAL exp

    SEMI            reduce using rule 52 (element -> identifier COLON type RARROW exp .)
    DOT             shift and go to state 58
    AT              shift and go to state 59
    ADD             shift and go to state 60
    SUBTRACT        shift and go to state 61
    MULTIPLY        shift and go to state 62
    DIVIDE          shift and go to state 63
    LT              shift and go to state 64
    LE              shift and go to state 65
    EQUAL           shift and go to state 66

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DOT in state 121 resolved as shift
WARNING: shift/reduce conflict for AT in state 121 resolved as shift
WARNING: shift/reduce conflict for ADD in state 121 resolved as shift
WARNING: shift/reduce conflict for SUBTRACT in state 121 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 121 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 121 resolved as shift
WARNING: shift/reduce conflict for LT in state 121 resolved as shift
WARNING: shift/reduce conflict for LE in state 121 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 121 resolved as shift
